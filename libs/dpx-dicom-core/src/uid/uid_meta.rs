use super::*;
use crate::uids;
use std::borrow::Cow::Borrowed as B;
use crate::uid::{StorageKind as S, StaticMetaList};

#[rustfmt::skip]

// cSpell:disable

/// A list of [Meta] structures describing all the known standard Uids.
pub static META_LIST_DICOM : StaticMetaList = StaticMetaList(STATIC_META_ARRAY);
inventory::submit!{META_LIST_DICOM}


/// List of [Meta] structs for all known SOP classes
static STATIC_META_ARRAY : &[Meta] = &[
    Meta { // 1.2.840.10008.1.1
        uid: Uid(B(uids::svc_verification::Verification)),
        is_retired: false,
        name: B("Verification SOP Class"),
        keyword: B("Verification"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.1.2
        uid: Uid(B(uids::ts::ImplicitVRLittleEndian)),
        is_retired: false,
        name: B("Implicit VR Little Endian: Default Transfer Syntax for DICOM"),
        keyword: B("ImplicitVRLittleEndian"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: false, is_compressed: false, is_encapsulated: false },
    },
    Meta { // 1.2.840.10008.1.2.1
        uid: Uid(B(uids::ts::ExplicitVRLittleEndian)),
        is_retired: false,
        name: B("Explicit VR Little Endian"),
        keyword: B("ExplicitVRLittleEndian"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: false },
    },
    Meta { // 1.2.840.10008.1.2.1.98
        uid: Uid(B(uids::ts::EncapsulatedUncompressedExplicitVRLittleEndian)),
        is_retired: false,
        name: B("Encapsulated Uncompressed Explicit VR Little Endian"),
        keyword: B("EncapsulatedUncompressedExplicitVRLittleEndian"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.1.99
        uid: Uid(B(uids::ts::DeflatedExplicitVRLittleEndian)),
        is_retired: false,
        name: B("Deflated Explicit VR Little Endian"),
        keyword: B("DeflatedExplicitVRLittleEndian"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: true, is_encapsulated: false },
    },
    Meta { // 1.2.840.10008.1.2.2
        uid: Uid(B(uids::ts::ExplicitVRBigEndian)),
        is_retired: true,
        name: B("Explicit VR Big Endian (Retired)"),
        keyword: B("ExplicitVRBigEndian"),
        uid_type: UidType::TransferSyntax { is_little_endian: false, is_explicit_vr: true, is_compressed: false, is_encapsulated: false },
    },
    Meta { // 1.2.840.10008.1.2.4.50
        uid: Uid(B(uids::ts::JPEGBaseline8Bit)),
        is_retired: false,
        name: B("JPEG Baseline (Process 1): Default Transfer Syntax for Lossy JPEG 8 Bit Image Compression"),
        keyword: B("JPEGBaseline8Bit"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.51
        uid: Uid(B(uids::ts::JPEGExtended12Bit)),
        is_retired: false,
        name: B("JPEG Extended (Process 2 & 4): Default Transfer Syntax for Lossy JPEG 12 Bit Image Compression (Process 4 only)"),
        keyword: B("JPEGExtended12Bit"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.52
        uid: Uid(B(uids::ts::RETIRED_JPEGExtended35)),
        is_retired: true,
        name: B("JPEG Extended (Process 3 & 5) (Retired)"),
        keyword: B("JPEGExtended35"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.53
        uid: Uid(B(uids::ts::RETIRED_JPEGSpectralSelectionNonHierarchical68)),
        is_retired: true,
        name: B("JPEG Spectral Selection, Non-Hierarchical (Process 6 & 8) (Retired)"),
        keyword: B("JPEGSpectralSelectionNonHierarchical68"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.54
        uid: Uid(B(uids::ts::RETIRED_JPEGSpectralSelectionNonHierarchical79)),
        is_retired: true,
        name: B("JPEG Spectral Selection, Non-Hierarchical (Process 7 & 9) (Retired)"),
        keyword: B("JPEGSpectralSelectionNonHierarchical79"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.55
        uid: Uid(B(uids::ts::RETIRED_JPEGFullProgressionNonHierarchical1012)),
        is_retired: true,
        name: B("JPEG Full Progression, Non-Hierarchical (Process 10 & 12) (Retired)"),
        keyword: B("JPEGFullProgressionNonHierarchical1012"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.56
        uid: Uid(B(uids::ts::RETIRED_JPEGFullProgressionNonHierarchical1113)),
        is_retired: true,
        name: B("JPEG Full Progression, Non-Hierarchical (Process 11 & 13) (Retired)"),
        keyword: B("JPEGFullProgressionNonHierarchical1113"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.57
        uid: Uid(B(uids::ts::JPEGLossless)),
        is_retired: false,
        name: B("JPEG Lossless, Non-Hierarchical (Process 14)"),
        keyword: B("JPEGLossless"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.58
        uid: Uid(B(uids::ts::RETIRED_JPEGLosslessNonHierarchical15)),
        is_retired: true,
        name: B("JPEG Lossless, Non-Hierarchical (Process 15) (Retired)"),
        keyword: B("JPEGLosslessNonHierarchical15"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.59
        uid: Uid(B(uids::ts::RETIRED_JPEGExtendedHierarchical1618)),
        is_retired: true,
        name: B("JPEG Extended, Hierarchical (Process 16 & 18) (Retired)"),
        keyword: B("JPEGExtendedHierarchical1618"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.60
        uid: Uid(B(uids::ts::RETIRED_JPEGExtendedHierarchical1719)),
        is_retired: true,
        name: B("JPEG Extended, Hierarchical (Process 17 & 19) (Retired)"),
        keyword: B("JPEGExtendedHierarchical1719"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.61
        uid: Uid(B(uids::ts::RETIRED_JPEGSpectralSelectionHierarchical2022)),
        is_retired: true,
        name: B("JPEG Spectral Selection, Hierarchical (Process 20 & 22) (Retired)"),
        keyword: B("JPEGSpectralSelectionHierarchical2022"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.62
        uid: Uid(B(uids::ts::RETIRED_JPEGSpectralSelectionHierarchical2123)),
        is_retired: true,
        name: B("JPEG Spectral Selection, Hierarchical (Process 21 & 23) (Retired)"),
        keyword: B("JPEGSpectralSelectionHierarchical2123"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.63
        uid: Uid(B(uids::ts::RETIRED_JPEGFullProgressionHierarchical2426)),
        is_retired: true,
        name: B("JPEG Full Progression, Hierarchical (Process 24 & 26) (Retired)"),
        keyword: B("JPEGFullProgressionHierarchical2426"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.64
        uid: Uid(B(uids::ts::RETIRED_JPEGFullProgressionHierarchical2527)),
        is_retired: true,
        name: B("JPEG Full Progression, Hierarchical (Process 25 & 27) (Retired)"),
        keyword: B("JPEGFullProgressionHierarchical2527"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.65
        uid: Uid(B(uids::ts::RETIRED_JPEGLosslessHierarchical28)),
        is_retired: true,
        name: B("JPEG Lossless, Hierarchical (Process 28) (Retired)"),
        keyword: B("JPEGLosslessHierarchical28"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.66
        uid: Uid(B(uids::ts::RETIRED_JPEGLosslessHierarchical29)),
        is_retired: true,
        name: B("JPEG Lossless, Hierarchical (Process 29) (Retired)"),
        keyword: B("JPEGLosslessHierarchical29"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.70
        uid: Uid(B(uids::ts::JPEGLosslessSV1)),
        is_retired: false,
        name: B("JPEG Lossless, Non-Hierarchical, First-Order Prediction (Process 14 [Selection Value 1]): Default Transfer Syntax for Lossless JPEG Image Compression"),
        keyword: B("JPEGLosslessSV1"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.80
        uid: Uid(B(uids::ts::JPEGLSLossless)),
        is_retired: false,
        name: B("JPEG-LS Lossless Image Compression"),
        keyword: B("JPEGLSLossless"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.81
        uid: Uid(B(uids::ts::JPEGLSNearLossless)),
        is_retired: false,
        name: B("JPEG-LS Lossy (Near-Lossless) Image Compression"),
        keyword: B("JPEGLSNearLossless"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.90
        uid: Uid(B(uids::ts::JPEG2000Lossless)),
        is_retired: false,
        name: B("JPEG 2000 Image Compression (Lossless Only)"),
        keyword: B("JPEG2000Lossless"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.91
        uid: Uid(B(uids::ts::JPEG2000)),
        is_retired: false,
        name: B("JPEG 2000 Image Compression"),
        keyword: B("JPEG2000"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.92
        uid: Uid(B(uids::ts::JPEG2000MCLossless)),
        is_retired: false,
        name: B("JPEG 2000 Part 2 Multi-component Image Compression (Lossless Only)"),
        keyword: B("JPEG2000MCLossless"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.93
        uid: Uid(B(uids::ts::JPEG2000MC)),
        is_retired: false,
        name: B("JPEG 2000 Part 2 Multi-component Image Compression"),
        keyword: B("JPEG2000MC"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.94
        uid: Uid(B(uids::ts::JPIPReferenced)),
        is_retired: false,
        name: B("JPIP Referenced"),
        keyword: B("JPIPReferenced"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.95
        uid: Uid(B(uids::ts::JPIPReferencedDeflate)),
        is_retired: false,
        name: B("JPIP Referenced Deflate"),
        keyword: B("JPIPReferencedDeflate"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: true, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.100
        uid: Uid(B(uids::ts::MPEG2MPML)),
        is_retired: false,
        name: B("MPEG2 Main Profile / Main Level"),
        keyword: B("MPEG2MPML"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.100.1
        uid: Uid(B(uids::ts::MPEG2MPMLF)),
        is_retired: false,
        name: B("Fragmentable MPEG2 Main Profile / Main Level"),
        keyword: B("MPEG2MPMLF"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.101
        uid: Uid(B(uids::ts::MPEG2MPHL)),
        is_retired: false,
        name: B("MPEG2 Main Profile / High Level"),
        keyword: B("MPEG2MPHL"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.101.1
        uid: Uid(B(uids::ts::MPEG2MPHLF)),
        is_retired: false,
        name: B("Fragmentable MPEG2 Main Profile / High Level"),
        keyword: B("MPEG2MPHLF"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.102
        uid: Uid(B(uids::ts::MPEG4HP41)),
        is_retired: false,
        name: B("MPEG-4 AVC/H.264 High Profile / Level 4.1"),
        keyword: B("MPEG4HP41"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.102.1
        uid: Uid(B(uids::ts::MPEG4HP41F)),
        is_retired: false,
        name: B("Fragmentable MPEG-4 AVC/H.264 High Profile / Level 4.1"),
        keyword: B("MPEG4HP41F"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.103
        uid: Uid(B(uids::ts::MPEG4HP41BD)),
        is_retired: false,
        name: B("MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1"),
        keyword: B("MPEG4HP41BD"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.103.1
        uid: Uid(B(uids::ts::MPEG4HP41BDF)),
        is_retired: false,
        name: B("Fragmentable MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1"),
        keyword: B("MPEG4HP41BDF"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.104
        uid: Uid(B(uids::ts::MPEG4HP422D)),
        is_retired: false,
        name: B("MPEG-4 AVC/H.264 High Profile / Level 4.2 For 2D Video"),
        keyword: B("MPEG4HP422D"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.104.1
        uid: Uid(B(uids::ts::MPEG4HP422DF)),
        is_retired: false,
        name: B("Fragmentable MPEG-4 AVC/H.264 High Profile / Level 4.2 For 2D Video"),
        keyword: B("MPEG4HP422DF"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.105
        uid: Uid(B(uids::ts::MPEG4HP423D)),
        is_retired: false,
        name: B("MPEG-4 AVC/H.264 High Profile / Level 4.2 For 3D Video"),
        keyword: B("MPEG4HP423D"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.105.1
        uid: Uid(B(uids::ts::MPEG4HP423DF)),
        is_retired: false,
        name: B("Fragmentable MPEG-4 AVC/H.264 High Profile / Level 4.2 For 3D Video"),
        keyword: B("MPEG4HP423DF"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.106
        uid: Uid(B(uids::ts::MPEG4HP42STEREO)),
        is_retired: false,
        name: B("MPEG-4 AVC/H.264 Stereo High Profile / Level 4.2"),
        keyword: B("MPEG4HP42STEREO"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.106.1
        uid: Uid(B(uids::ts::MPEG4HP42STEREOF)),
        is_retired: false,
        name: B("Fragmentable MPEG-4 AVC/H.264 Stereo High Profile / Level 4.2"),
        keyword: B("MPEG4HP42STEREOF"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.107
        uid: Uid(B(uids::ts::HEVCMP51)),
        is_retired: false,
        name: B("HEVC/H.265 Main Profile / Level 5.1"),
        keyword: B("HEVCMP51"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.4.108
        uid: Uid(B(uids::ts::HEVCM10P51)),
        is_retired: false,
        name: B("HEVC/H.265 Main 10 Profile / Level 5.1"),
        keyword: B("HEVCM10P51"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.5
        uid: Uid(B(uids::ts::RLELossless)),
        is_retired: false,
        name: B("RLE Lossless"),
        keyword: B("RLELossless"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.6.1
        uid: Uid(B(uids::ts::RETIRED_RFC2557MIMEEncapsulation)),
        is_retired: true,
        name: B("RFC 2557 MIME encapsulation (Retired)"),
        keyword: B("RFC2557MIMEEncapsulation"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.6.2
        uid: Uid(B(uids::ts::RETIRED_XMLEncoding)),
        is_retired: true,
        name: B("XML Encoding (Retired)"),
        keyword: B("XMLEncoding"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.7.1
        uid: Uid(B(uids::ts::SMPTEST211020UncompressedProgressiveActiveVideo)),
        is_retired: false,
        name: B("SMPTE ST 2110-20 Uncompressed Progressive Active Video"),
        keyword: B("SMPTEST211020UncompressedProgressiveActiveVideo"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.7.2
        uid: Uid(B(uids::ts::SMPTEST211020UncompressedInterlacedActiveVideo)),
        is_retired: false,
        name: B("SMPTE ST 2110-20 Uncompressed Interlaced Active Video"),
        keyword: B("SMPTEST211020UncompressedInterlacedActiveVideo"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.2.7.3
        uid: Uid(B(uids::ts::SMPTEST211030PCMDigitalAudio)),
        is_retired: false,
        name: B("SMPTE ST 2110-30 PCM Digital Audio"),
        keyword: B("SMPTEST211030PCMDigitalAudio"),
        uid_type: UidType::TransferSyntax { is_little_endian: true, is_explicit_vr: true, is_compressed: false, is_encapsulated: true },
    },
    Meta { // 1.2.840.10008.1.3.10
        uid: Uid(B(uids::svc_media::MediaStorageDirectoryStorage)),
        is_retired: false,
        name: B("Media Storage Directory Storage"),
        keyword: B("MediaStorageDirectoryStorage"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.1.5.1
        uid: Uid(B(uids::svc_palette::HotIronPalette)),
        is_retired: false,
        name: B("Hot Iron Color Palette SOP Instance"),
        keyword: B("HotIronPalette"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.1.5.2
        uid: Uid(B(uids::svc_palette::PETPalette)),
        is_retired: false,
        name: B("PET Color Palette SOP Instance"),
        keyword: B("PETPalette"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.1.5.3
        uid: Uid(B(uids::svc_palette::HotMetalBluePalette)),
        is_retired: false,
        name: B("Hot Metal Blue Color Palette SOP Instance"),
        keyword: B("HotMetalBluePalette"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.1.5.4
        uid: Uid(B(uids::svc_palette::PET20StepPalette)),
        is_retired: false,
        name: B("PET 20 Step Color Palette SOP Instance"),
        keyword: B("PET20StepPalette"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.1.5.5
        uid: Uid(B(uids::svc_palette::SpringPalette)),
        is_retired: false,
        name: B("Spring Color Palette SOP Instance"),
        keyword: B("SpringPalette"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.1.5.6
        uid: Uid(B(uids::svc_palette::SummerPalette)),
        is_retired: false,
        name: B("Summer Color Palette SOP Instance"),
        keyword: B("SummerPalette"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.1.5.7
        uid: Uid(B(uids::svc_palette::FallPalette)),
        is_retired: false,
        name: B("Fall Color Palette SOP Instance"),
        keyword: B("FallPalette"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.1.5.8
        uid: Uid(B(uids::svc_palette::WinterPalette)),
        is_retired: false,
        name: B("Winter Color Palette SOP Instance"),
        keyword: B("WinterPalette"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.1.9
        uid: Uid(B(uids::svc_retired::svc_study_content_notification::RETIRED_BasicStudyContentNotification)),
        is_retired: true,
        name: B("Basic Study Content Notification SOP Class (Retired)"),
        keyword: B("BasicStudyContentNotification"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.1.20
        uid: Uid(B("1.2.840.10008.1.20")),
        is_retired: true,
        name: B("Papyrus 3 Implicit VR Little Endian (Retired)"),
        keyword: B("Papyrus3ImplicitVRLittleEndian"),
        uid_type: UidType::Other, // Do not treat this weird oid as xfer at all!
    },
    Meta { // 1.2.840.10008.1.20.1
        uid: Uid(B(uids::svc_commitment::StorageCommitmentPushModel)),
        is_retired: false,
        name: B("Storage Commitment Push Model SOP Class"),
        keyword: B("StorageCommitmentPushModel"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.1.20.1.1
        uid: Uid(B(uids::svc_commitment::StorageCommitmentPushModelInstance)),
        is_retired: false,
        name: B("Storage Commitment Push Model SOP Instance"),
        keyword: B("StorageCommitmentPushModelInstance"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.1.20.2
        uid: Uid(B(uids::svc_commitment::RETIRED_StorageCommitmentPullModel)),
        is_retired: true,
        name: B("Storage Commitment Pull Model SOP Class (Retired)"),
        keyword: B("StorageCommitmentPullModel"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.1.20.2.1
        uid: Uid(B(uids::svc_commitment::RETIRED_StorageCommitmentPullModelInstance)),
        is_retired: true,
        name: B("Storage Commitment Pull Model SOP Instance (Retired)"),
        keyword: B("StorageCommitmentPullModelInstance"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.1.40
        uid: Uid(B(uids::svc_event_logging::ProceduralEventLogging)),
        is_retired: false,
        name: B("Procedural Event Logging SOP Class"),
        keyword: B("ProceduralEventLogging"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.1.40.1
        uid: Uid(B(uids::svc_event_logging::ProceduralEventLoggingInstance)),
        is_retired: false,
        name: B("Procedural Event Logging SOP Instance"),
        keyword: B("ProceduralEventLoggingInstance"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.1.42
        uid: Uid(B(uids::svc_event_logging::SubstanceAdministrationLogging)),
        is_retired: false,
        name: B("Substance Administration Logging SOP Class"),
        keyword: B("SubstanceAdministrationLogging"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.1.42.1
        uid: Uid(B(uids::svc_event_logging::SubstanceAdministrationLoggingInstance)),
        is_retired: false,
        name: B("Substance Administration Logging SOP Instance"),
        keyword: B("SubstanceAdministrationLoggingInstance"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.2.6.1
        uid: Uid(B(uids::coding_scheme::DCMUID)),
        is_retired: false,
        name: B("DICOM UID Registry"),
        keyword: B("DCMUID"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.4
        uid: Uid(B(uids::coding_scheme::DCM)),
        is_retired: false,
        name: B("DICOM Controlled Terminology"),
        keyword: B("DCM"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.5
        uid: Uid(B(uids::coding_scheme::MA)),
        is_retired: false,
        name: B("Adult Mouse Anatomy Ontology"),
        keyword: B("MA"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.6
        uid: Uid(B(uids::coding_scheme::UBERON)),
        is_retired: false,
        name: B("Uberon Ontology"),
        keyword: B("UBERON"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.7
        uid: Uid(B(uids::coding_scheme::ITIS_TSN)),
        is_retired: false,
        name: B("Integrated Taxonomic Information System (ITIS) Taxonomic Serial Number (TSN)"),
        keyword: B("ITIS_TSN"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.8
        uid: Uid(B(uids::coding_scheme::MGI)),
        is_retired: false,
        name: B("Mouse Genome Initiative (MGI)"),
        keyword: B("MGI"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.9
        uid: Uid(B(uids::coding_scheme::PUBCHEM_CID)),
        is_retired: false,
        name: B("PubChem Compound CID"),
        keyword: B("PUBCHEM_CID"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.10
        uid: Uid(B(uids::coding_scheme::DC)),
        is_retired: false,
        name: B("Dublin Core"),
        keyword: B("DC"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.11
        uid: Uid(B(uids::coding_scheme::NYUMCCG)),
        is_retired: false,
        name: B("New York University Melanoma Clinical Cooperative Group"),
        keyword: B("NYUMCCG"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.12
        uid: Uid(B(uids::coding_scheme::MAYONRISBSASRG)),
        is_retired: false,
        name: B("Mayo Clinic Non-radiological Images Specific Body Structure Anatomical Surface Region Guide"),
        keyword: B("MAYONRISBSASRG"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.13
        uid: Uid(B(uids::coding_scheme::IBSI)),
        is_retired: false,
        name: B("Image Biomarker Standardisation Initiative"),
        keyword: B("IBSI"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.14
        uid: Uid(B(uids::coding_scheme::RO)),
        is_retired: false,
        name: B("Radiomics Ontology"),
        keyword: B("RO"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.15
        uid: Uid(B(uids::coding_scheme::RADELEMENT)),
        is_retired: false,
        name: B("RadElement"),
        keyword: B("RADELEMENT"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.16
        uid: Uid(B(uids::coding_scheme::I11)),
        is_retired: false,
        name: B("ICD-11"),
        keyword: B("I11"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.17
        uid: Uid(B(uids::coding_scheme::UNS)),
        is_retired: false,
        name: B("Unified numbering system (UNS) for metals and alloys"),
        keyword: B("UNS"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.2.16.18
        uid: Uid(B(uids::coding_scheme::RRID)),
        is_retired: false,
        name: B("Research Resource Identification"),
        keyword: B("RRID"),
        uid_type: UidType::CodingScheme,
    },
    Meta { // 1.2.840.10008.3.1.1.1
        uid: Uid(B(uids::app_context::DICOMApplicationContext)),
        is_retired: false,
        name: B("DICOM Application Context Name"),
        keyword: B("DICOMApplicationContext"),
        uid_type: UidType::ApplicationContextName,
    },
    Meta { // 1.2.840.10008.3.1.2.1.1
        uid: Uid(B(uids::svc_retired::svc_patient::RETIRED_DetachedPatientManagement)),
        is_retired: true,
        name: B("Detached Patient Management SOP Class (Retired)"),
        keyword: B("DetachedPatientManagement"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.3.1.2.1.4
        uid: Uid(B(uids::svc_retired::svc_patient::RETIRED_DetachedPatientManagementMeta)),
        is_retired: true,
        name: B("Detached Patient Management Meta SOP Class (Retired)"),
        keyword: B("DetachedPatientManagementMeta"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.3.1.2.2.1
        uid: Uid(B(uids::svc_retired::svc_patient::RETIRED_DetachedVisitManagement)),
        is_retired: true,
        name: B("Detached Visit Management SOP Class (Retired)"),
        keyword: B("DetachedVisitManagement"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.3.1.2.3.1
        uid: Uid(B(uids::svc_study::RETIRED_DetachedStudyManagement)),
        is_retired: true,
        name: B("Detached Study Management SOP Class (Retired)"),
        keyword: B("DetachedStudyManagement"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.3.1.2.3.2
        uid: Uid(B(uids::svc_study::RETIRED_StudyComponentManagement)),
        is_retired: true,
        name: B("Study Component Management SOP Class (Retired)"),
        keyword: B("StudyComponentManagement"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.3.1.2.3.3
        uid: Uid(B(uids::svc_study::ModalityPerformedProcedureStep)),
        is_retired: false,
        name: B("Modality Performed Procedure Step SOP Class"),
        keyword: B("ModalityPerformedProcedureStep"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.3.1.2.3.4
        uid: Uid(B(uids::svc_study::ModalityPerformedProcedureStepRetrieve)),
        is_retired: false,
        name: B("Modality Performed Procedure Step Retrieve SOP Class"),
        keyword: B("ModalityPerformedProcedureStepRetrieve"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.3.1.2.3.5
        uid: Uid(B(uids::svc_study::ModalityPerformedProcedureStepNotification)),
        is_retired: false,
        name: B("Modality Performed Procedure Step Notification SOP Class"),
        keyword: B("ModalityPerformedProcedureStepNotification"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.3.1.2.5.1
        uid: Uid(B(uids::svc_study::RETIRED_DetachedResultsManagement)),
        is_retired: true,
        name: B("Detached Results Management SOP Class (Retired)"),
        keyword: B("DetachedResultsManagement"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.3.1.2.5.4
        uid: Uid(B(uids::svc_study::RETIRED_DetachedResultsManagementMeta)),
        is_retired: true,
        name: B("Detached Results Management Meta SOP Class (Retired)"),
        keyword: B("DetachedResultsManagementMeta"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.3.1.2.5.5
        uid: Uid(B(uids::svc_study::RETIRED_DetachedStudyManagementMeta)),
        is_retired: true,
        name: B("Detached Study Management Meta SOP Class (Retired)"),
        keyword: B("DetachedStudyManagementMeta"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.3.1.2.6.1
        uid: Uid(B(uids::svc_retired::svc_results::RETIRED_DetachedInterpretationManagement)),
        is_retired: true,
        name: B("Detached Interpretation Management SOP Class (Retired)"),
        keyword: B("DetachedInterpretationManagement"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.4.2
        uid: Uid(B(uids::svc_storage::Storage)),
        is_retired: false,
        name: B("Storage Service Class"),
        keyword: B("Storage"),
        uid_type: UidType::ServiceClass,
    },
    Meta { // 1.2.840.10008.5.1.1.1
        uid: Uid(B(uids::svc_print::BasicFilmSession)),
        is_retired: false,
        name: B("Basic Film Session SOP Class"),
        keyword: B("BasicFilmSession"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.2
        uid: Uid(B(uids::svc_print::BasicFilmBox)),
        is_retired: false,
        name: B("Basic Film Box SOP Class"),
        keyword: B("BasicFilmBox"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.4
        uid: Uid(B(uids::svc_print::BasicGrayscaleImageBox)),
        is_retired: false,
        name: B("Basic Grayscale Image Box SOP Class"),
        keyword: B("BasicGrayscaleImageBox"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.4.1
        uid: Uid(B(uids::svc_print::BasicColorImageBox)),
        is_retired: false,
        name: B("Basic Color Image Box SOP Class"),
        keyword: B("BasicColorImageBox"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.4.2
        uid: Uid(B(uids::svc_print::ReferencedImageBox)),
        is_retired: false,
        name: B("Referenced Image Box SOP Class (Retired)"),
        keyword: B("ReferencedImageBox"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.9
        uid: Uid(B(uids::svc_print::BasicGrayscalePrintManagementMeta)),
        is_retired: false,
        name: B("Basic Grayscale Print Management Meta SOP Class"),
        keyword: B("BasicGrayscalePrintManagementMeta"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.9.1
        uid: Uid(B(uids::svc_print::RETIRED_ReferencedGrayscalePrintManagementMeta)),
        is_retired: true,
        name: B("Referenced Grayscale Print Management Meta SOP Class (Retired)"),
        keyword: B("ReferencedGrayscalePrintManagementMeta"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.14
        uid: Uid(B(uids::svc_print::PrintJob)),
        is_retired: false,
        name: B("Print Job SOP Class"),
        keyword: B("PrintJob"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.15
        uid: Uid(B(uids::svc_print::BasicAnnotationBox)),
        is_retired: false,
        name: B("Basic Annotation Box SOP Class"),
        keyword: B("BasicAnnotationBox"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.16
        uid: Uid(B(uids::svc_print::Printer)),
        is_retired: false,
        name: B("Printer SOP Class"),
        keyword: B("Printer"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.16.376
        uid: Uid(B(uids::svc_print::PrinterConfigurationRetrieval)),
        is_retired: false,
        name: B("Printer Configuration Retrieval SOP Class"),
        keyword: B("PrinterConfigurationRetrieval"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.17
        uid: Uid(B(uids::svc_print::PrinterInstance)),
        is_retired: false,
        name: B("Printer SOP Instance"),
        keyword: B("PrinterInstance"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.5.1.1.17.376
        uid: Uid(B(uids::svc_print::PrinterConfigurationRetrievalInstance)),
        is_retired: false,
        name: B("Printer Configuration Retrieval SOP Instance"),
        keyword: B("PrinterConfigurationRetrievalInstance"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.5.1.1.18
        uid: Uid(B(uids::svc_print::BasicColorPrintManagementMeta)),
        is_retired: false,
        name: B("Basic Color Print Management Meta SOP Class"),
        keyword: B("BasicColorPrintManagementMeta"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.18.1
        uid: Uid(B(uids::svc_print::RETIRED_ReferencedColorPrintManagementMeta)),
        is_retired: true,
        name: B("Referenced Color Print Management Meta SOP Class (Retired)"),
        keyword: B("ReferencedColorPrintManagementMeta"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.22
        uid: Uid(B(uids::svc_print::VOILUTBox)),
        is_retired: false,
        name: B("VOI LUT Box SOP Class"),
        keyword: B("VOILUTBox"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.23
        uid: Uid(B(uids::svc_print::PresentationLUT)),
        is_retired: false,
        name: B("Presentation LUT SOP Class"),
        keyword: B("PresentationLUT"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.24
        uid: Uid(B(uids::svc_print::RETIRED_ImageOverlayBox)),
        is_retired: true,
        name: B("Image Overlay Box SOP Class (Retired)"),
        keyword: B("ImageOverlayBox"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.24.1
        uid: Uid(B(uids::svc_print::RETIRED_BasicPrintImageOverlayBox)),
        is_retired: true,
        name: B("Basic Print Image Overlay Box SOP Class (Retired)"),
        keyword: B("BasicPrintImageOverlayBox"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.25
        uid: Uid(B(uids::svc_retired::svc_queue_management::RETIRED_PrintQueueInstance)),
        is_retired: true,
        name: B("Print Queue SOP Instance (Retired)"),
        keyword: B("PrintQueueInstance"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.5.1.1.26
        uid: Uid(B(uids::svc_retired::svc_queue_management::RETIRED_PrintQueueManagement)),
        is_retired: true,
        name: B("Print Queue Management SOP Class (Retired)"),
        keyword: B("PrintQueueManagement"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.27
        uid: Uid(B(uids::svc_storage::RETIRED_StoredPrintStorage)),
        is_retired: true,
        name: B("Stored Print Storage SOP Class (Retired)"),
        keyword: B("StoredPrintStorage"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.29
        uid: Uid(B(uids::svc_storage::RETIRED_HardcopyGrayscaleImageStorage)),
        is_retired: true,
        name: B("Hardcopy Grayscale Image Storage SOP Class (Retired)"),
        keyword: B("HardcopyGrayscaleImageStorage"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.30
        uid: Uid(B(uids::svc_storage::RETIRED_HardcopyColorImageStorage)),
        is_retired: true,
        name: B("Hardcopy Color Image Storage SOP Class (Retired)"),
        keyword: B("HardcopyColorImageStorage"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.31
        uid: Uid(B(uids::svc_print::RETIRED_PullPrintRequest)),
        is_retired: true,
        name: B("Pull Print Request SOP Class (Retired)"),
        keyword: B("PullPrintRequest"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.32
        uid: Uid(B(uids::svc_print::RETIRED_PullStoredPrintManagementMeta)),
        is_retired: true,
        name: B("Pull Stored Print Management Meta SOP Class (Retired)"),
        keyword: B("PullStoredPrintManagementMeta"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.33
        uid: Uid(B(uids::svc_media_creation::MediaCreationManagement)),
        is_retired: false,
        name: B("Media Creation Management SOP Class UID"),
        keyword: B("MediaCreationManagement"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.40
        uid: Uid(B(uids::svc_display::DisplaySystem)),
        is_retired: false,
        name: B("Display System SOP Class"),
        keyword: B("DisplaySystem"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.1.40.1
        uid: Uid(B(uids::svc_display::DisplaySystemInstance)),
        is_retired: false,
        name: B("Display System SOP Instance"),
        keyword: B("DisplaySystemInstance"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.1
        uid: Uid(B(uids::svc_storage::ComputedRadiographyImageStorage)),
        is_retired: false,
        name: B("Computed Radiography Image Storage"),
        keyword: B("ComputedRadiographyImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("CR"), guessed_size: 2048 * 2048 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.1.1
        uid: Uid(B(uids::svc_storage::DigitalXRayImageStorageForPresentation)),
        is_retired: false,
        name: B("Digital X-Ray Image Storage - For Presentation"),
        keyword: B("DigitalXRayImageStorageForPresentation"),
        uid_type: UidType::SopClassPatientStorage { modality: B("DX"), guessed_size: 2048 * 2048 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.1.1.1
        uid: Uid(B(uids::svc_storage::DigitalXRayImageStorageForProcessing)),
        is_retired: false,
        name: B("Digital X-Ray Image Storage - For Processing"),
        keyword: B("DigitalXRayImageStorageForProcessing"),
        uid_type: UidType::SopClassPatientStorage { modality: B("DP"), guessed_size: 2048 * 2048 * 2, kind: S::Image },
    },

    Meta { // 1.2.840.10008.5.1.4.1.1.1.2
        uid: Uid(B(uids::svc_storage::DigitalMammographyXRayImageStorageForPresentation)),
        is_retired: false,
        name: B("Digital Mammography X-Ray Image Storage - For Presentation"),
        keyword: B("DigitalMammographyXRayImageStorageForPresentation"),
        uid_type: UidType::SopClassPatientStorage { modality: B("DXm"), guessed_size: 4096 * 4096 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.1.2.1
        uid: Uid(B(uids::svc_storage::DigitalMammographyXRayImageStorageForProcessing)),
        is_retired: false,
        name: B("Digital Mammography X-Ray Image Storage - For Processing"),
        keyword: B("DigitalMammographyXRayImageStorageForProcessing"),
        uid_type: UidType::SopClassPatientStorage { modality: B("DPm"), guessed_size: 4096 * 4096 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.1.3
        uid: Uid(B(uids::svc_storage::DigitalIntraOralXRayImageStorageForPresentation)),
        is_retired: false,
        name: B("Digital Intra-Oral X-Ray Image Storage - For Presentation"),
        keyword: B("DigitalIntraOralXRayImageStorageForPresentation"),
        uid_type: UidType::SopClassPatientStorage { modality: B("DXo"), guessed_size: 1024 * 1024 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.1.3.1
        uid: Uid(B(uids::svc_storage::DigitalIntraOralXRayImageStorageForProcessing)),
        is_retired: false,
        name: B("Digital Intra-Oral X-Ray Image Storage - For Processing"),
        keyword: B("DigitalIntraOralXRayImageStorageForProcessing"),
        uid_type: UidType::SopClassPatientStorage { modality: B("DPo"), guessed_size: 1024 * 1024 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.2
        uid: Uid(B(uids::svc_storage::CTImageStorage)),
        is_retired: false,
        name: B("CT Image Storage"),
        keyword: B("CTImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("CT"), guessed_size: 512 * 512 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.2.1
        uid: Uid(B(uids::svc_storage::EnhancedCTImageStorage)),
        is_retired: false,
        name: B("Enhanced CT Image Storage"),
        keyword: B("EnhancedCTImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("CTe"), guessed_size: 256 * 512 * 512, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.2.2
        uid: Uid(B(uids::svc_storage::LegacyConvertedEnhancedCTImageStorage)),
        is_retired: false,
        name: B("Legacy Converted Enhanced CT Image Storage"),
        keyword: B("LegacyConvertedEnhancedCTImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("CTl"), guessed_size: 256 * 512 * 512, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.3
        uid: Uid(B(uids::svc_storage::RETIRED_UltrasoundMultiFrameImageStorageRetired)),
        is_retired: true,
        name: B("Ultrasound Multi-frame Image Storage (Retired)"),
        keyword: B("UltrasoundMultiFrameImageStorageRetired"),
        uid_type: UidType::SopClassPatientStorage { modality: B("USf"), guessed_size: 512 * 512 * 512, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.3.1
        uid: Uid(B(uids::svc_storage::UltrasoundMultiFrameImageStorage)),
        is_retired: false,
        name: B("Ultrasound Multi-frame Image Storage"),
        keyword: B("UltrasoundMultiFrameImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("USm"), guessed_size: 512 * 512 * 512, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.4
        uid: Uid(B(uids::svc_storage::MRImageStorage)),
        is_retired: false,
        name: B("MR Image Storage"),
        keyword: B("MRImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("MR"), guessed_size: 256 * 256 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.4.1
        uid: Uid(B(uids::svc_storage::EnhancedMRImageStorage)),
        is_retired: false,
        name: B("Enhanced MR Image Storage"),
        keyword: B("EnhancedMRImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("MRe"), guessed_size: 256 * 512 * 512, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.4.2
        uid: Uid(B(uids::svc_storage::MRSpectroscopyStorage)),
        is_retired: false,
        name: B("MR Spectroscopy Storage"),
        keyword: B("MRSpectroscopyStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("MRs"), guessed_size: 256 * 512 * 512, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.4.3
        uid: Uid(B(uids::svc_storage::EnhancedMRColorImageStorage)),
        is_retired: false,
        name: B("Enhanced MR Color Image Storage"),
        keyword: B("EnhancedMRColorImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("MRc"), guessed_size: 256 * 512 * 512 * 3, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.4.4
        uid: Uid(B(uids::svc_storage::LegacyConvertedEnhancedMRImageStorage)),
        is_retired: false,
        name: B("Legacy Converted Enhanced MR Image Storage"),
        keyword: B("LegacyConvertedEnhancedMRImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("MRl"), guessed_size: 256 * 512 * 512 * 3, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.5
        uid: Uid(B(uids::svc_storage::RETIRED_NuclearMedicineImageStorageRetired)),
        is_retired: true,
        name: B("Nuclear Medicine Image Storage (Retired)"),
        keyword: B("NuclearMedicineImageStorageRetired"),
        uid_type: UidType::SopClassPatientStorage { modality: B("NMr"), guessed_size: 64 * 64 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.6
        uid: Uid(B(uids::svc_storage::RETIRED_UltrasoundImageStorageRetired)),
        is_retired: true,
        name: B("Ultrasound Image Storage (Retired)"),
        keyword: B("UltrasoundImageStorageRetired"),
        uid_type: UidType::SopClassPatientStorage { modality: B("USr"), guessed_size: 512 * 512, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.6.1
        uid: Uid(B(uids::svc_storage::UltrasoundImageStorage)),
        is_retired: false,
        name: B("Ultrasound Image Storage"),
        keyword: B("UltrasoundImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("US"), guessed_size: 512 * 512, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.6.2
        uid: Uid(B(uids::svc_storage::EnhancedUSVolumeStorage)),
        is_retired: false,
        name: B("Enhanced US Volume Storage"),
        keyword: B("EnhancedUSVolumeStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("USe"), guessed_size: 512 * 512 * 512, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.7
        uid: Uid(B(uids::svc_storage::SecondaryCaptureImageStorage)),
        is_retired: false,
        name: B("Secondary Capture Image Storage"),
        keyword: B("SecondaryCaptureImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SC"), guessed_size: 512 * 512 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.7.1
        uid: Uid(B(uids::svc_storage::MultiFrameSingleBitSecondaryCaptureImageStorage)),
        is_retired: false,
        name: B("Multi-frame Single Bit Secondary Capture Image Storage"),
        keyword: B("MultiFrameSingleBitSecondaryCaptureImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SCs"), guessed_size: 1024 * 1024, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.7.2
        uid: Uid(B(uids::svc_storage::MultiFrameGrayscaleByteSecondaryCaptureImageStorage)),
        is_retired: false,
        name: B("Multi-frame Grayscale Byte Secondary Capture Image Storage"),
        keyword: B("MultiFrameGrayscaleByteSecondaryCaptureImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SCb"), guessed_size: 512 * 512, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.7.3
        uid: Uid(B(uids::svc_storage::MultiFrameGrayscaleWordSecondaryCaptureImageStorage)),
        is_retired: false,
        name: B("Multi-frame Grayscale Word Secondary Capture Image Storage"),
        keyword: B("MultiFrameGrayscaleWordSecondaryCaptureImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SCw"), guessed_size: 512 * 512 * 2, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.7.4
        uid: Uid(B(uids::svc_storage::MultiFrameTrueColorSecondaryCaptureImageStorage)),
        is_retired: false,
        name: B("Multi-frame True Color Secondary Capture Image Storage"),
        keyword: B("MultiFrameTrueColorSecondaryCaptureImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SCc"), guessed_size: 512 * 512 * 3, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.8
        uid: Uid(B(uids::svc_storage::RETIRED_StandaloneOverlayStorage)),
        is_retired: true,
        name: B("Standalone Overlay Storage (Retired)"),
        keyword: B("StandaloneOverlayStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OV"), guessed_size: 512 * 512, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9
        uid: Uid(B(uids::svc_storage::RETIRED_StandaloneCurveStorage)),
        is_retired: true,
        name: B("Standalone Curve Storage (Retired)"),
        keyword: B("StandaloneCurveStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("CV"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.1
        uid: Uid(B(uids::svc_storage::RETIRED_WaveformStorageTrial)),
        is_retired: true,
        name: B("Waveform Storage - Trial (Retired)"),
        keyword: B("WaveformStorageTrial"),
        uid_type: UidType::SopClassPatientStorage { modality: B("WFt"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.1.1
        uid: Uid(B(uids::svc_storage::TwelveLeadECGWaveformStorage)),
        is_retired: false,
        name: B("12-lead ECG Waveform Storage"),
        keyword: B("TwelveLeadECGWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("TLE"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.1.2
        uid: Uid(B(uids::svc_storage::GeneralECGWaveformStorage)),
        is_retired: false,
        name: B("General ECG Waveform Storage"),
        keyword: B("GeneralECGWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("ECG"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.1.3
        uid: Uid(B(uids::svc_storage::AmbulatoryECGWaveformStorage)),
        is_retired: false,
        name: B("Ambulatory ECG Waveform Storage"),
        keyword: B("AmbulatoryECGWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("ECA"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.2.1
        uid: Uid(B(uids::svc_storage::HemodynamicWaveformStorage)),
        is_retired: false,
        name: B("Hemodynamic Waveform Storage"),
        keyword: B("HemodynamicWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("WVh"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.3.1
        uid: Uid(B(uids::svc_storage::CardiacElectrophysiologyWaveformStorage)),
        is_retired: false,
        name: B("Cardiac Electrophysiology Waveform Storage"),
        keyword: B("CardiacElectrophysiologyWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("WVc"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.4.1
        uid: Uid(B(uids::svc_storage::BasicVoiceAudioWaveformStorage)),
        is_retired: false,
        name: B("Basic Voice Audio Waveform Storage"),
        keyword: B("BasicVoiceAudioWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("AUV"), guessed_size: 4096, kind: S::Audio },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.4.2
        uid: Uid(B(uids::svc_storage::GeneralAudioWaveformStorage)),
        is_retired: false,
        name: B("General Audio Waveform Storage"),
        keyword: B("GeneralAudioWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("AUG"), guessed_size: 4096, kind: S::Audio },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.5.1
        uid: Uid(B(uids::svc_storage::ArterialPulseWaveformStorage)),
        is_retired: false,
        name: B("Arterial Pulse Waveform Storage"),
        keyword: B("ArterialPulseWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("WVa"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.6.1
        uid: Uid(B(uids::svc_storage::RespiratoryWaveformStorage)),
        is_retired: false,
        name: B("Respiratory Waveform Storage"),
        keyword: B("RespiratoryWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("WVr"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.6.2
        uid: Uid(B(uids::svc_storage::MultichannelRespiratoryWaveformStorage)),
        is_retired: false,
        name: B("Multi-channel Respiratory Waveform Storage"),
        keyword: B("MultichannelRespiratoryWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("WVm"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.7.1
        uid: Uid(B(uids::svc_storage::RoutineScalpElectroencephalogramWaveformStorage)),
        is_retired: false,
        name: B("Routine Scalp Electroencephalogram Waveform Storage"),
        keyword: B("RoutineScalpElectroencephalogramWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("EEG"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.7.2
        uid: Uid(B(uids::svc_storage::ElectromyogramWaveformStorage)),
        is_retired: false,
        name: B("Electromyogram Waveform Storage"),
        keyword: B("ElectromyogramWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("EMG"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.7.3
        uid: Uid(B(uids::svc_storage::ElectrooculogramWaveformStorage)),
        is_retired: false,
        name: B("Electrooculogram Waveform Storage"),
        keyword: B("ElectrooculogramWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("EOG"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.7.4
        uid: Uid(B(uids::svc_storage::SleepElectroencephalogramWaveformStorage)),
        is_retired: false,
        name: B("Sleep Electroencephalogram Waveform Storage"),
        keyword: B("SleepElectroencephalogramWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("WVs"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.9.8.1
        uid: Uid(B(uids::svc_storage::BodyPositionWaveformStorage)),
        is_retired: false,
        name: B("Body Position Waveform Storage"),
        keyword: B("BodyPositionWaveformStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("WVb"), guessed_size: 4096, kind: S::Waveform },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.10
        uid: Uid(B(uids::svc_storage::RETIRED_StandaloneModalityLUTStorage)),
        is_retired: true,
        name: B("Standalone Modality LUT Storage (Retired)"),
        keyword: B("StandaloneModalityLUTStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("ML"), guessed_size: 4096 * 2, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.11
        uid: Uid(B(uids::svc_storage::RETIRED_StandaloneVOILUTStorage)),
        is_retired: true,
        name: B("Standalone VOI LUT Storage (Retired)"),
        keyword: B("StandaloneVOILUTStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VO"), guessed_size: 4096 * 2, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.11.1
        uid: Uid(B(uids::svc_storage::GrayscaleSoftcopyPresentationStateStorage)),
        is_retired: false,
        name: B("Grayscale Softcopy Presentation State Storage"),
        keyword: B("GrayscaleSoftcopyPresentationStateStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PSg"), guessed_size: 4096, kind: S::PresentationState },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.11.2
        uid: Uid(B(uids::svc_storage::ColorSoftcopyPresentationStateStorage)),
        is_retired: false,
        name: B("Color Softcopy Presentation State Storage"),
        keyword: B("ColorSoftcopyPresentationStateStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PSc"), guessed_size: 4096, kind: S::PresentationState },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.11.3
        uid: Uid(B(uids::svc_storage::PseudoColorSoftcopyPresentationStateStorage)),
        is_retired: false,
        name: B("Pseudo-Color Softcopy Presentation State Storage"),
        keyword: B("PseudoColorSoftcopyPresentationStateStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PSp"), guessed_size: 4096, kind: S::PresentationState },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.11.4
        uid: Uid(B(uids::svc_storage::BlendingSoftcopyPresentationStateStorage)),
        is_retired: false,
        name: B("Blending Softcopy Presentation State Storage"),
        keyword: B("BlendingSoftcopyPresentationStateStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PSb"), guessed_size: 4096, kind: S::PresentationState },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.11.5
        uid: Uid(B(uids::svc_storage::XAXRFGrayscaleSoftcopyPresentationStateStorage)),
        is_retired: false,
        name: B("XA/XRF Grayscale Softcopy Presentation State Storage"),
        keyword: B("XAXRFGrayscaleSoftcopyPresentationStateStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PSx"), guessed_size: 4096, kind: S::PresentationState },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.11.6
        uid: Uid(B(uids::svc_storage::GrayscalePlanarMPRVolumetricPresentationStateStorage)),
        is_retired: false,
        name: B("Grayscale Planar MPR Volumetric Presentation State Storage"),
        keyword: B("GrayscalePlanarMPRVolumetricPresentationStateStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VPg"), guessed_size: 4096, kind: S::PresentationState },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.11.7
        uid: Uid(B(uids::svc_storage::CompositingPlanarMPRVolumetricPresentationStateStorage)),
        is_retired: false,
        name: B("Compositing Planar MPR Volumetric Presentation State Storage"),
        keyword: B("CompositingPlanarMPRVolumetricPresentationStateStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VPc"), guessed_size: 4096, kind: S::PresentationState },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.11.8
        uid: Uid(B(uids::svc_storage::AdvancedBlendingPresentationStateStorage)),
        is_retired: false,
        name: B("Advanced Blending Presentation State Storage"),
        keyword: B("AdvancedBlendingPresentationStateStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PSa"), guessed_size: 4096, kind: S::PresentationState },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.11.9
        uid: Uid(B(uids::svc_storage::VolumeRenderingVolumetricPresentationStateStorage)),
        is_retired: false,
        name: B("Volume Rendering Volumetric Presentation State Storage"),
        keyword: B("VolumeRenderingVolumetricPresentationStateStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VPm"), guessed_size: 4096, kind: S::PresentationState },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.11.10
        uid: Uid(B(uids::svc_storage::SegmentedVolumeRenderingVolumetricPresentationStateStorage)),
        is_retired: false,
        name: B("Segmented Volume Rendering Volumetric Presentation State Storage"),
        keyword: B("SegmentedVolumeRenderingVolumetricPresentationStateStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VPs"), guessed_size: 4096, kind: S::PresentationState },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.11.11
        uid: Uid(B(uids::svc_storage::MultipleVolumeRenderingVolumetricPresentationStateStorage)),
        is_retired: false,
        name: B("Multiple Volume Rendering Volumetric Presentation State Storage"),
        keyword: B("MultipleVolumeRenderingVolumetricPresentationStateStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VPm"), guessed_size: 4096, kind: S::PresentationState },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.12.1
        uid: Uid(B(uids::svc_storage::XRayAngiographicImageStorage)),
        is_retired: false,
        name: B("X-Ray Angiographic Image Storage"),
        keyword: B("XRayAngiographicImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("XA"), guessed_size: 256 * 512 * 512, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.12.1.1
        uid: Uid(B(uids::svc_storage::EnhancedXAImageStorage)),
        is_retired: false,
        name: B("Enhanced XA Image Storage"),
        keyword: B("EnhancedXAImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("XAe"), guessed_size: 256 * 512 * 512, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.12.2
        uid: Uid(B(uids::svc_storage::XRayRadiofluoroscopicImageStorage)),
        is_retired: false,
        name: B("X-Ray Radiofluoroscopic Image Storage"),
        keyword: B("XRayRadiofluoroscopicImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RF"), guessed_size: 256 * 512 * 512, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.12.2.1
        uid: Uid(B(uids::svc_storage::EnhancedXRFImageStorage)),
        is_retired: false,
        name: B("Enhanced XRF Image Storage"),
        keyword: B("EnhancedXRFImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RFe"), guessed_size: 256 * 512 * 512, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.12.3
        uid: Uid(B(uids::svc_storage::RETIRED_XRayAngiographicBiPlaneImageStorage)),
        is_retired: true,
        name: B("X-Ray Angiographic Bi-Plane Image Storage (Retired)"),
        keyword: B("XRayAngiographicBiPlaneImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("XB"), guessed_size: 512 * 512 * 2, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.13.1.1
        uid: Uid(B(uids::svc_storage::XRay3DAngiographicImageStorage)),
        is_retired: false,
        name: B("X-Ray 3D Angiographic Image Storage"),
        keyword: B("XRay3DAngiographicImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("XA3"), guessed_size: 256 * 512 * 512, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.13.1.2
        uid: Uid(B(uids::svc_storage::XRay3DCraniofacialImageStorage)),
        is_retired: false,
        name: B("X-Ray 3D Craniofacial Image Storage"),
        keyword: B("XRay3DCraniofacialImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("XC3"), guessed_size: 256 * 512 * 512, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.13.1.3
        uid: Uid(B(uids::svc_storage::BreastTomosynthesisImageStorage)),
        is_retired: false,
        name: B("Breast Tomosynthesis Image Storage"),
        keyword: B("BreastTomosynthesisImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("BT"), guessed_size: 4096 * 4096 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.13.1.4
        uid: Uid(B(uids::svc_storage::BreastProjectionXRayImageStorageForPresentation)),
        is_retired: false,
        name: B("Breast Projection X-Ray Image Storage - For Presentation"),
        keyword: B("BreastProjectionXRayImageStorageForPresentation"),
        uid_type: UidType::SopClassPatientStorage { modality: B("BX"), guessed_size: 4096 * 4096 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.13.1.5
        uid: Uid(B(uids::svc_storage::BreastProjectionXRayImageStorageForProcessing)),
        is_retired: false,
        name: B("Breast Projection X-Ray Image Storage - For Processing"),
        keyword: B("BreastProjectionXRayImageStorageForProcessing"),
        uid_type: UidType::SopClassPatientStorage { modality: B("BP"), guessed_size: 4096 * 4096 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.14.1
        uid: Uid(B(uids::svc_storage::IntravascularOpticalCoherenceTomographyImageStorageForPresentation)),
        is_retired: false,
        name: B("Intravascular Optical Coherence Tomography Image Storage - For Presentation"),
        keyword: B("IntravascularOpticalCoherenceTomographyImageStorageForPresentation"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OCt"), guessed_size: 512 * 512, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.14.2
        uid: Uid(B(uids::svc_storage::IntravascularOpticalCoherenceTomographyImageStorageForProcessing)),
        is_retired: false,
        name: B("Intravascular Optical Coherence Tomography Image Storage - For Processing"),
        keyword: B("IntravascularOpticalCoherenceTomographyImageStorageForProcessing"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OCp"), guessed_size: 512 * 512, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.20
        uid: Uid(B(uids::svc_storage::NuclearMedicineImageStorage)),
        is_retired: false,
        name: B("Nuclear Medicine Image Storage"),
        keyword: B("NuclearMedicineImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("NM"), guessed_size: 64 * 64 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.30
        uid: Uid(B(uids::svc_storage::ParametricMapStorage)),
        is_retired: false,
        name: B("Parametric Map Storage"),
        keyword: B("ParametricMapStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PM"), guessed_size: 256 * 256 * 4, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.66
        uid: Uid(B(uids::svc_storage::RawDataStorage)),
        is_retired: false,
        name: B("Raw Data Storage"),
        keyword: B("RawDataStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RAW"), guessed_size: 512 * 512 * 256, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.66.1
        uid: Uid(B(uids::svc_storage::SpatialRegistrationStorage)),
        is_retired: false,
        name: B("Spatial Registration Storage"),
        keyword: B("SpatialRegistrationStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RGs"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.66.2
        uid: Uid(B(uids::svc_storage::SpatialFiducialsStorage)),
        is_retired: false,
        name: B("Spatial Fiducials Storage"),
        keyword: B("SpatialFiducialsStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("FID"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.66.3
        uid: Uid(B(uids::svc_storage::DeformableSpatialRegistrationStorage)),
        is_retired: false,
        name: B("Deformable Spatial Registration Storage"),
        keyword: B("DeformableSpatialRegistrationStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RGd"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.66.4
        uid: Uid(B(uids::svc_storage::SegmentationStorage)),
        is_retired: false,
        name: B("Segmentation Storage"),
        keyword: B("SegmentationStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SG"), guessed_size: 4096, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.66.5
        uid: Uid(B(uids::svc_storage::SurfaceSegmentationStorage)),
        is_retired: false,
        name: B("Surface Segmentation Storage"),
        keyword: B("SurfaceSegmentationStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SGg"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.66.6
        uid: Uid(B(uids::svc_storage::TractographyResultsStorage)),
        is_retired: false,
        name: B("Tractography Results Storage"),
        keyword: B("TractographyResultsStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("TR"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.67
        uid: Uid(B(uids::svc_storage::RealWorldValueMappingStorage)),
        is_retired: false,
        name: B("Real World Value Mapping Storage"),
        keyword: B("RealWorldValueMappingStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RWM"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.68.1
        uid: Uid(B(uids::svc_storage::SurfaceScanMeshStorage)),
        is_retired: false,
        name: B("Surface Scan Mesh Storage"),
        keyword: B("SurfaceScanMeshStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SSm"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.68.2
        uid: Uid(B(uids::svc_storage::SurfaceScanPointCloudStorage)),
        is_retired: false,
        name: B("Surface Scan Point Cloud Storage"),
        keyword: B("SurfaceScanPointCloudStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SSp"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1
        uid: Uid(B(uids::svc_storage::RETIRED_VLImageStorageTrial)),
        is_retired: true,
        name: B("VL Image Storage - Trial (Retired)"),
        keyword: B("VLImageStorageTrial"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VLr"), guessed_size: 768 * 576 * 3, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.2
        uid: Uid(B(uids::svc_storage::RETIRED_VLMultiFrameImageStorageTrial)),
        is_retired: true,
        name: B("VL Multi-frame Image Storage - Trial (Retired)"),
        keyword: B("VLMultiFrameImageStorageTrial"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VMr"), guessed_size: 768 * 576 * 3, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.1
        uid: Uid(B(uids::svc_storage::VLEndoscopicImageStorage)),
        is_retired: false,
        name: B("VL Endoscopic Image Storage"),
        keyword: B("VLEndoscopicImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VLe"), guessed_size: 768 * 576 * 3, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.1.1
        uid: Uid(B(uids::svc_storage::VideoEndoscopicImageStorage)),
        is_retired: false,
        name: B("Video Endoscopic Image Storage"),
        keyword: B("VideoEndoscopicImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VVe"), guessed_size: 768 * 576 * 3, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.2
        uid: Uid(B(uids::svc_storage::VLMicroscopicImageStorage)),
        is_retired: false,
        name: B("VL Microscopic Image Storage"),
        keyword: B("VLMicroscopicImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VLm"), guessed_size: 768 * 576 * 3, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.2.1
        uid: Uid(B(uids::svc_storage::VideoMicroscopicImageStorage)),
        is_retired: false,
        name: B("Video Microscopic Image Storage"),
        keyword: B("VideoMicroscopicImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VVm"), guessed_size: 768 * 576 * 3, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.3
        uid: Uid(B(uids::svc_storage::VLSlideCoordinatesMicroscopicImageStorage)),
        is_retired: false,
        name: B("VL Slide-Coordinates Microscopic Image Storage"),
        keyword: B("VLSlideCoordinatesMicroscopicImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VLs"), guessed_size: 768 * 576 * 3, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.4
        uid: Uid(B(uids::svc_storage::VLPhotographicImageStorage)),
        is_retired: false,
        name: B("VL Photographic Image Storage"),
        keyword: B("VLPhotographicImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VLp"), guessed_size: 768 * 576 * 3, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.4.1
        uid: Uid(B(uids::svc_storage::VideoPhotographicImageStorage)),
        is_retired: false,
        name: B("Video Photographic Image Storage"),
        keyword: B("VideoPhotographicImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VVp"), guessed_size: 768 * 576 * 3, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.5.1
        uid: Uid(B(uids::svc_storage::OphthalmicPhotography8BitImageStorage)),
        is_retired: false,
        name: B("Ophthalmic Photography 8 Bit Image Storage"),
        keyword: B("OphthalmicPhotography8BitImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OPb"), guessed_size: 768 * 576 * 3, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.5.2
        uid: Uid(B(uids::svc_storage::OphthalmicPhotography16BitImageStorage)),
        is_retired: false,
        name: B("Ophthalmic Photography 16 Bit Image Storage"),
        keyword: B("OphthalmicPhotography16BitImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OPw"), guessed_size: 768 * 576 * 6, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.5.3
        uid: Uid(B(uids::svc_storage::StereometricRelationshipStorage)),
        is_retired: false,
        name: B("Stereometric Relationship Storage"),
        keyword: B("StereometricRelationshipStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OPr"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.5.4
        uid: Uid(B(uids::svc_storage::OphthalmicTomographyImageStorage)),
        is_retired: false,
        name: B("Ophthalmic Tomography Image Storage"),
        keyword: B("OphthalmicTomographyImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OPt"), guessed_size: 768 * 576 * 3, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.5.5
        uid: Uid(B(uids::svc_storage::WideFieldOphthalmicPhotographyStereographicProjectionImageStorage)),
        is_retired: false,
        name: B("Wide Field Ophthalmic Photography Stereographic Projection Image Storage"),
        keyword: B("WideFieldOphthalmicPhotographyStereographicProjectionImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OWs"), guessed_size: 768 * 576 * 3, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.5.6
        uid: Uid(B(uids::svc_storage::WideFieldOphthalmicPhotography3DCoordinatesImageStorage)),
        is_retired: false,
        name: B("Wide Field Ophthalmic Photography 3D Coordinates Image Storage"),
        keyword: B("WideFieldOphthalmicPhotography3DCoordinatesImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OW3"), guessed_size: 768 * 576 * 3, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.5.7
        uid: Uid(B(uids::svc_storage::OphthalmicOpticalCoherenceTomographyEnFaceImageStorage)),
        is_retired: false,
        name: B("Ophthalmic Optical Coherence Tomography En Face Image Storage"),
        keyword: B("OphthalmicOpticalCoherenceTomographyEnFaceImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OCe"), guessed_size: 768 * 576  * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.5.8
        uid: Uid(B(uids::svc_storage::OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage)),
        is_retired: false,
        name: B("Ophthalmic Optical Coherence Tomography B-scan Volume Analysis Storage"),
        keyword: B("OphthalmicOpticalCoherenceTomographyBscanVolumeAnalysisStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OCb"), guessed_size: 768 * 576, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.6
        uid: Uid(B(uids::svc_storage::VLWholeSlideMicroscopyImageStorage)),
        is_retired: false,
        name: B("VL Whole Slide Microscopy Image Storage"),
        keyword: B("VLWholeSlideMicroscopyImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VLw"), guessed_size: 10000 * 10000 * 3, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.77.1.7
        uid: Uid(B(uids::svc_storage::DermoscopicPhotographyImageStorage)),
        is_retired: false,
        name: B("Dermoscopic Photography Image Storage"),
        keyword: B("DermoscopicPhotographyImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("VLd"), guessed_size: 768 * 576 * 3, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.78.1
        uid: Uid(B(uids::svc_storage::LensometryMeasurementsStorage)),
        is_retired: false,
        name: B("Lensometry Measurements Storage"),
        keyword: B("LensometryMeasurementsStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OPl"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.78.2
        uid: Uid(B(uids::svc_storage::AutorefractionMeasurementsStorage)),
        is_retired: false,
        name: B("Autorefraction Measurements Storage"),
        keyword: B("AutorefractionMeasurementsStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OPa"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.78.3
        uid: Uid(B(uids::svc_storage::KeratometryMeasurementsStorage)),
        is_retired: false,
        name: B("Keratometry Measurements Storage"),
        keyword: B("KeratometryMeasurementsStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OPk"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.78.4
        uid: Uid(B(uids::svc_storage::SubjectiveRefractionMeasurementsStorage)),
        is_retired: false,
        name: B("Subjective Refraction Measurements Storage"),
        keyword: B("SubjectiveRefractionMeasurementsStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OPs"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.78.5
        uid: Uid(B(uids::svc_storage::VisualAcuityMeasurementsStorage)),
        is_retired: false,
        name: B("Visual Acuity Measurements Storage"),
        keyword: B("VisualAcuityMeasurementsStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OPv"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.78.6
        uid: Uid(B(uids::svc_storage::SpectaclePrescriptionReportStorage)),
        is_retired: false,
        name: B("Spectacle Prescription Report Storage"),
        keyword: B("SpectaclePrescriptionReportStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRs"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.78.7
        uid: Uid(B(uids::svc_storage::OphthalmicAxialMeasurementsStorage)),
        is_retired: false,
        name: B("Ophthalmic Axial Measurements Storage"),
        keyword: B("OphthalmicAxialMeasurementsStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OPx"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.78.8
        uid: Uid(B(uids::svc_storage::IntraocularLensCalculationsStorage)),
        is_retired: false,
        name: B("Intraocular Lens Calculations Storage"),
        keyword: B("IntraocularLensCalculationsStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OPc"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.79.1
        uid: Uid(B(uids::svc_storage::MacularGridThicknessAndVolumeReportStorage)),
        is_retired: false,
        name: B("Macular Grid Thickness and Volume Report Storage"),
        keyword: B("MacularGridThicknessAndVolumeReportStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRg"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.80.1
        uid: Uid(B(uids::svc_storage::OphthalmicVisualFieldStaticPerimetryMeasurementsStorage)),
        is_retired: false,
        name: B("Ophthalmic Visual Field Static Perimetry Measurements Storage"),
        keyword: B("OphthalmicVisualFieldStaticPerimetryMeasurementsStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OPp"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.81.1
        uid: Uid(B(uids::svc_storage::OphthalmicThicknessMapStorage)),
        is_retired: false,
        name: B("Ophthalmic Thickness Map Storage"),
        keyword: B("OphthalmicThicknessMapStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OPm"), guessed_size: 768 * 576, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.82.1
        uid: Uid(B(uids::svc_storage::CornealTopographyMapStorage)),
        is_retired: false,
        name: B("Corneal Topography Map Storage"),
        keyword: B("CornealTopographyMapStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("CM"), guessed_size: 512 * 512, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.1
        uid: Uid(B(uids::svc_storage::RETIRED_TextSRStorageTrial)),
        is_retired: true,
        name: B("Text SR Storage - Trial (Retired)"),
        keyword: B("TextSRStorageTrial"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRtt"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.2
        uid: Uid(B(uids::svc_storage::RETIRED_AudioSRStorageTrial)),
        is_retired: true,
        name: B("Audio SR Storage - Trial (Retired)"),
        keyword: B("AudioSRStorageTrial"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRat"), guessed_size: 4096, kind: S::Audio },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.3
        uid: Uid(B(uids::svc_storage::RETIRED_DetailSRStorageTrial)),
        is_retired: true,
        name: B("Detail SR Storage - Trial (Retired)"),
        keyword: B("DetailSRStorageTrial"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRdt"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.4
        uid: Uid(B(uids::svc_storage::RETIRED_ComprehensiveSRStorageTrial)),
        is_retired: true,
        name: B("Comprehensive SR Storage - Trial (Retired)"),
        keyword: B("ComprehensiveSRStorageTrial"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRct"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.11
        uid: Uid(B(uids::svc_storage::BasicTextSRStorage)),
        is_retired: false,
        name: B("Basic Text SR Storage"),
        keyword: B("BasicTextSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRt"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.22
        uid: Uid(B(uids::svc_storage::EnhancedSRStorage)),
        is_retired: false,
        name: B("Enhanced SR Storage"),
        keyword: B("EnhancedSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRe"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.33
        uid: Uid(B(uids::svc_storage::ComprehensiveSRStorage)),
        is_retired: false,
        name: B("Comprehensive SR Storage"),
        keyword: B("ComprehensiveSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRc"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.34
        uid: Uid(B(uids::svc_storage::Comprehensive3DSRStorage)),
        is_retired: false,
        name: B("Comprehensive 3D SR Storage"),
        keyword: B("Comprehensive3DSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SR3"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.35
        uid: Uid(B(uids::svc_storage::ExtensibleSRStorage)),
        is_retired: false,
        name: B("Extensible SR Storage"),
        keyword: B("ExtensibleSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRx"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.40
        uid: Uid(B(uids::svc_storage::ProcedureLogStorage)),
        is_retired: false,
        name: B("Procedure Log Storage"),
        keyword: B("ProcedureLogStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRp"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.50
        uid: Uid(B(uids::svc_storage::MammographyCADSRStorage)),
        is_retired: false,
        name: B("Mammography CAD SR Storage"),
        keyword: B("MammographyCADSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRm"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.59
        uid: Uid(B(uids::svc_storage::KeyObjectSelectionDocumentStorage)),
        is_retired: false,
        name: B("Key Object Selection Document Storage"),
        keyword: B("KeyObjectSelectionDocumentStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("KO"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.65
        uid: Uid(B(uids::svc_storage::ChestCADSRStorage)),
        is_retired: false,
        name: B("Chest CAD SR Storage"),
        keyword: B("ChestCADSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRh"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.67
        uid: Uid(B(uids::svc_storage::XRayRadiationDoseSRStorage)),
        is_retired: false,
        name: B("X-Ray Radiation Dose SR Storage"),
        keyword: B("XRayRadiationDoseSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRd"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.68
        uid: Uid(B(uids::svc_storage::RadiopharmaceuticalRadiationDoseSRStorage)),
        is_retired: false,
        name: B("Radiopharmaceutical Radiation Dose SR Storage"),
        keyword: B("RadiopharmaceuticalRadiationDoseSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRr"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.69
        uid: Uid(B(uids::svc_storage::ColonCADSRStorage)),
        is_retired: false,
        name: B("Colon CAD SR Storage"),
        keyword: B("ColonCADSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRo"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.70
        uid: Uid(B(uids::svc_storage::ImplantationPlanSRStorage)),
        is_retired: false,
        name: B("Implantation Plan SR Storage"),
        keyword: B("ImplantationPlanSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRi"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.71
        uid: Uid(B(uids::svc_storage::AcquisitionContextSRStorage)),
        is_retired: false,
        name: B("Acquisition Context SR Storage"),
        keyword: B("AcquisitionContextSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRa"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.72
        uid: Uid(B(uids::svc_storage::SimplifiedAdultEchoSRStorage)),
        is_retired: false,
        name: B("Simplified Adult Echo SR Storage"),
        keyword: B("SimplifiedAdultEchoSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRu"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.73
        uid: Uid(B(uids::svc_storage::PatientRadiationDoseSRStorage)),
        is_retired: false,
        name: B("Patient Radiation Dose SR Storage"),
        keyword: B("PatientRadiationDoseSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRq"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.74
        uid: Uid(B(uids::svc_storage::PlannedImagingAgentAdministrationSRStorage)),
        is_retired: false,
        name: B("Planned Imaging Agent Administration SR Storage"),
        keyword: B("PlannedImagingAgentAdministrationSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRj"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.75
        uid: Uid(B(uids::svc_storage::PerformedImagingAgentAdministrationSRStorage)),
        is_retired: false,
        name: B("Performed Imaging Agent Administration SR Storage"),
        keyword: B("PerformedImagingAgentAdministrationSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRi"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.88.76
        uid: Uid(B(uids::svc_storage::EnhancedXRayRadiationDoseSRStorage)),
        is_retired: false,
        name: B("Enhanced X-Ray Radiation Dose SR Storage"),
        keyword: B("EnhancedXRayRadiationDoseSRStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SRde"), guessed_size: 4096, kind: S::StructuredReport },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.90.1
        uid: Uid(B(uids::svc_storage::ContentAssessmentResultsStorage)),
        is_retired: false,
        name: B("Content Assessment Results Storage"),
        keyword: B("ContentAssessmentResultsStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("AS"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.91.1
        uid: Uid(B(uids::svc_storage::MicroscopyBulkSimpleAnnotationsStorage)),
        is_retired: false,
        name: B("Microscopy Bulk Simple Annotations Storage"),
        keyword: B("MicroscopyBulkSimpleAnnotationsStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("MAs"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.104.1
        uid: Uid(B(uids::svc_storage::EncapsulatedPDFStorage)),
        is_retired: false,
        name: B("Encapsulated PDF Storage"),
        keyword: B("EncapsulatedPDFStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PDF"), guessed_size: 1024 * 1024, kind: S::Document },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.104.2
        uid: Uid(B(uids::svc_storage::EncapsulatedCDAStorage)),
        is_retired: false,
        name: B("Encapsulated CDA Storage"),
        keyword: B("EncapsulatedCDAStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("CDA"), guessed_size: 4096, kind: S::Document },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.104.3
        uid: Uid(B(uids::svc_storage::EncapsulatedSTLStorage)),
        is_retired: false,
        name: B("Encapsulated STL Storage"),
        keyword: B("EncapsulatedSTLStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("STL"), guessed_size: 4096, kind: S::Document },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.104.4
        uid: Uid(B(uids::svc_storage::EncapsulatedOBJStorage)),
        is_retired: false,
        name: B("Encapsulated OBJ Storage"),
        keyword: B("EncapsulatedOBJStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("OBJ"), guessed_size: 4096, kind: S::Document },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.104.5
        uid: Uid(B(uids::svc_storage::EncapsulatedMTLStorage)),
        is_retired: false,
        name: B("Encapsulated MTL Storage"),
        keyword: B("EncapsulatedMTLStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("MTL"), guessed_size: 4096, kind: S::Document },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.128
        uid: Uid(B(uids::svc_storage::PositronEmissionTomographyImageStorage)),
        is_retired: false,
        name: B("Positron Emission Tomography Image Storage"),
        keyword: B("PositronEmissionTomographyImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PI"), guessed_size: 512 * 512 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.128.1
        uid: Uid(B(uids::svc_storage::LegacyConvertedEnhancedPETImageStorage)),
        is_retired: false,
        name: B("Legacy Converted Enhanced PET Image Storage"),
        keyword: B("LegacyConvertedEnhancedPETImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PIl"), guessed_size: 512 * 512 * 2, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.129
        uid: Uid(B(uids::svc_storage::RETIRED_StandalonePETCurveStorage)),
        is_retired: true,
        name: B("Standalone PET Curve Storage (Retired)"),
        keyword: B("StandalonePETCurveStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PC"), guessed_size: 4096, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.130
        uid: Uid(B(uids::svc_storage::EnhancedPETImageStorage)),
        is_retired: false,
        name: B("Enhanced PET Image Storage"),
        keyword: B("EnhancedPETImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PIe"), guessed_size: 512 * 512 * 2, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.131
        uid: Uid(B(uids::svc_storage::BasicStructuredDisplayStorage)),
        is_retired: false,
        name: B("Basic Structured Display Storage"),
        keyword: B("BasicStructuredDisplayStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("SD"), guessed_size: 0, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.200.1
        uid: Uid(B(uids::svc_defined_procedure_protocol::CTDefinedProcedureProtocolStorage)),
        is_retired: false,
        name: B("CT Defined Procedure Protocol Storage"),
        keyword: B("CTDefinedProcedureProtocolStorage"),
        uid_type: UidType::SopClassNonPatientStorage,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.200.2
        uid: Uid(B(uids::svc_storage::CTPerformedProcedureProtocolStorage)),
        is_retired: false,
        name: B("CT Performed Procedure Protocol Storage"),
        keyword: B("CTPerformedProcedureProtocolStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PPcp"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.200.3
        uid: Uid(B(uids::svc_protocol_approval::ProtocolApprovalStorage)),
        is_retired: false,
        name: B("Protocol Approval Storage"),
        keyword: B("ProtocolApprovalStorage"),
        uid_type: UidType::SopClassNonPatientStorage,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.200.4
        uid: Uid(B(uids::svc_protocol_approval::ProtocolApprovalInformationModelFind)),
        is_retired: false,
        name: B("Protocol Approval Information Model - FIND"),
        keyword: B("ProtocolApprovalInformationModelFind"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.200.5
        uid: Uid(B(uids::svc_protocol_approval::ProtocolApprovalInformationModelMove)),
        is_retired: false,
        name: B("Protocol Approval Information Model - MOVE"),
        keyword: B("ProtocolApprovalInformationModelMove"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.200.6
        uid: Uid(B(uids::svc_protocol_approval::ProtocolApprovalInformationModelGet)),
        is_retired: false,
        name: B("Protocol Approval Information Model - GET"),
        keyword: B("ProtocolApprovalInformationModelGet"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.200.7
        uid: Uid(B(uids::svc_defined_procedure_protocol::XADefinedProcedureProtocolStorage)),
        is_retired: false,
        name: B("XA Defined Procedure Protocol Storage"),
        keyword: B("XADefinedProcedureProtocolStorage"),
        uid_type: UidType::SopClassNonPatientStorage,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.200.8
        uid: Uid(B(uids::svc_storage::XAPerformedProcedureProtocolStorage)),
        is_retired: false,
        name: B("XA Performed Procedure Protocol Storage"),
        keyword: B("XAPerformedProcedureProtocolStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("PPxp"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.201.1
        uid: Uid(B(uids::svc_inventory::InventoryStorage)),
        is_retired: false,
        name: B("Inventory Storage"),
        keyword: B("InventoryStorage"),
        uid_type: UidType::SopClassNonPatientStorage,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.201.2
        uid: Uid(B(uids::svc_inventory::InventoryFind)),
        is_retired: false,
        name: B("Inventory - FIND"),
        keyword: B("InventoryFind"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.201.3
        uid: Uid(B(uids::svc_inventory::InventoryMove)),
        is_retired: false,
        name: B("Inventory - MOVE"),
        keyword: B("InventoryMove"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.201.4
        uid: Uid(B(uids::svc_inventory::InventoryGet)),
        is_retired: false,
        name: B("Inventory - GET"),
        keyword: B("InventoryGet"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.201.5
        uid: Uid(B(uids::svc_inventory::InventoryCreation)),
        is_retired: false,
        name: B("Inventory Creation"),
        keyword: B("InventoryCreation"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.201.6
        uid: Uid(B(uids::svc_inventory::RepositoryQuery)),
        is_retired: false,
        name: B("Repository Query"),
        keyword: B("RepositoryQuery"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.201.1.1
        uid: Uid(B(uids::svc_inventory::StorageManagementInstance)),
        is_retired: false,
        name: B("Storage Management SOP Instance"),
        keyword: B("StorageManagementInstance"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.1
        uid: Uid(B(uids::svc_storage::RTImageStorage)),
        is_retired: false,
        name: B("RT Image Storage"),
        keyword: B("RTImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RI"), guessed_size: 4096, kind: S::Cine },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.2
        uid: Uid(B(uids::svc_storage::RTDoseStorage)),
        is_retired: false,
        name: B("RT Dose Storage"),
        keyword: B("RTDoseStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RD"), guessed_size: 4096, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.3
        uid: Uid(B(uids::svc_storage::RTStructureSetStorage)),
        is_retired: false,
        name: B("RT Structure Set Storage"),
        keyword: B("RTStructureSetStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RS"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.4
        uid: Uid(B(uids::svc_storage::RTBeamsTreatmentRecordStorage)),
        is_retired: false,
        name: B("RT Beams Treatment Record Storage"),
        keyword: B("RTBeamsTreatmentRecordStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RTb"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.5
        uid: Uid(B(uids::svc_storage::RTPlanStorage)),
        is_retired: false,
        name: B("RT Plan Storage"),
        keyword: B("RTPlanStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RP"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.6
        uid: Uid(B(uids::svc_storage::RTBrachyTreatmentRecordStorage)),
        is_retired: false,
        name: B("RT Brachy Treatment Record Storage"),
        keyword: B("RTBrachyTreatmentRecordStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RTr"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.7
        uid: Uid(B(uids::svc_storage::RTTreatmentSummaryRecordStorage)),
        is_retired: false,
        name: B("RT Treatment Summary Record Storage"),
        keyword: B("RTTreatmentSummaryRecordStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RTs"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.8
        uid: Uid(B(uids::svc_storage::RTIonPlanStorage)),
        is_retired: false,
        name: B("RT Ion Plan Storage"),
        keyword: B("RTIonPlanStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RPi"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.9
        uid: Uid(B(uids::svc_storage::RTIonBeamsTreatmentRecordStorage)),
        is_retired: false,
        name: B("RT Ion Beams Treatment Record Storage"),
        keyword: B("RTIonBeamsTreatmentRecordStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RTi"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.10
        uid: Uid(B(uids::svc_storage::RTPhysicianIntentStorage)),
        is_retired: false,
        name: B("RT Physician Intent Storage"),
        keyword: B("RTPhysicianIntentStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RIp"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.11
        uid: Uid(B(uids::svc_storage::RTSegmentAnnotationStorage)),
        is_retired: false,
        name: B("RT Segment Annotation Storage"),
        keyword: B("RTSegmentAnnotationStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RAs"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.12
        uid: Uid(B(uids::svc_storage::RTRadiationSetStorage)),
        is_retired: false,
        name: B("RT Radiation Set Storage"),
        keyword: B("RTRadiationSetStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RSe"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.13
        uid: Uid(B(uids::svc_storage::CArmPhotonElectronRadiationStorage)),
        is_retired: false,
        name: B("C-Arm Photon-Electron Radiation Storage"),
        keyword: B("CArmPhotonElectronRadiationStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("Rca"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.14
        uid: Uid(B(uids::svc_storage::TomotherapeuticRadiationStorage)),
        is_retired: false,
        name: B("Tomotherapeutic Radiation Storage"),
        keyword: B("TomotherapeuticRadiationStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("Rto"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.15
        uid: Uid(B(uids::svc_storage::RoboticArmRadiationStorage)),
        is_retired: false,
        name: B("Robotic-Arm Radiation Storage"),
        keyword: B("RoboticArmRadiationStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("Rra"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.16
        uid: Uid(B(uids::svc_storage::RTRadiationRecordSetStorage)),
        is_retired: false,
        name: B("RT Radiation Record Set Storage"),
        keyword: B("RTRadiationRecordSetStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RSr"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.17
        uid: Uid(B(uids::svc_storage::RTRadiationSalvageRecordStorage)),
        is_retired: false,
        name: B("RT Radiation Salvage Record Storage"),
        keyword: B("RTRadiationSalvageRecordStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RRs"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.18
        uid: Uid(B(uids::svc_storage::TomotherapeuticRadiationRecordStorage)),
        is_retired: false,
        name: B("Tomotherapeutic Radiation Record Storage"),
        keyword: B("TomotherapeuticRadiationRecordStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RRt"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.19
        uid: Uid(B(uids::svc_storage::CArmPhotonElectronRadiationRecordStorage)),
        is_retired: false,
        name: B("C-Arm Photon-Electron Radiation Record Storage"),
        keyword: B("CArmPhotonElectronRadiationRecordStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RRc"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.20
        uid: Uid(B(uids::svc_storage::RoboticRadiationRecordStorage)),
        is_retired: false,
        name: B("Robotic Radiation Record Storage"),
        keyword: B("RoboticRadiationRecordStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RRr"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.21
        uid: Uid(B(uids::svc_storage::RTRadiationSetDeliveryInstructionStorage)),
        is_retired: false,
        name: B("RT Radiation Set Delivery Instruction Storage"),
        keyword: B("RTRadiationSetDeliveryInstructionStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RSd"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.22
        uid: Uid(B(uids::svc_storage::RTTreatmentPreparationStorage)),
        is_retired: false,
        name: B("RT Treatment Preparation Storage"),
        keyword: B("RTTreatmentPreparationStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RTp"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.23
        uid: Uid(B(uids::svc_storage::EnhancedRTImageStorage)),
        is_retired: false,
        name: B("Enhanced RT Image Storage"),
        keyword: B("EnhancedRTImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RTim"), guessed_size: 4096, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.24
        uid: Uid(B(uids::svc_storage::EnhancedContinuousRTImageStorage)),
        is_retired: false,
        name: B("Enhanced Continuous RT Image Storage"),
        keyword: B("EnhancedContinuousRTImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RTic"), guessed_size: 4096, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.481.25
        uid: Uid(B(uids::svc_storage::RTPatientPositionAcquisitionInstructionStorage)),
        is_retired: false,
        name: B("RT Patient Position Acquisition Instruction Storage"),
        keyword: B("RTPatientPositionAcquisitionInstructionStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RPp"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.501.1
        uid: Uid(B(uids::svc_storage::DICOSCTImageStorage)),
        is_retired: false,
        name: B("DICOS CT Image Storage"),
        keyword: B("DICOSCTImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("CTs"), guessed_size: 512 * 512 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.501.2.1
        uid: Uid(B(uids::svc_storage::DICOSDigitalXRayImageStorageForPresentation)),
        is_retired: false,
        name: B("DICOS Digital X-Ray Image Storage - For Presentation"),
        keyword: B("DICOSDigitalXRayImageStorageForPresentation"),
        uid_type: UidType::SopClassPatientStorage { modality: B("DXs"), guessed_size: 2048 * 2048 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.501.2.2
        uid: Uid(B(uids::svc_storage::DICOSDigitalXRayImageStorageForProcessing)),
        is_retired: false,
        name: B("DICOS Digital X-Ray Image Storage - For Processing"),
        keyword: B("DICOSDigitalXRayImageStorageForProcessing"),
        uid_type: UidType::SopClassPatientStorage { modality: B("DPs"), guessed_size: 2048 * 2048 * 2, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.501.3
        uid: Uid(B(uids::svc_storage::DICOSThreatDetectionReportStorage)),
        is_retired: false,
        name: B("DICOS Threat Detection Report Storage"),
        keyword: B("DICOSThreatDetectionReportStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("TDR"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.501.4
        uid: Uid(B(uids::svc_storage::DICOS2DAITStorage)),
        is_retired: false,
        name: B("DICOS 2D AIT Storage"),
        keyword: B("DICOS2DAITStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("AI2"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.501.5
        uid: Uid(B(uids::svc_storage::DICOS3DAITStorage)),
        is_retired: false,
        name: B("DICOS 3D AIT Storage"),
        keyword: B("DICOS3DAITStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("AI3"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.501.6
        uid: Uid(B(uids::svc_storage::DICOSQuadrupoleResonanceStorage)),
        is_retired: false,
        name: B("DICOS Quadrupole Resonance (QR) Storage"),
        keyword: B("DICOSQuadrupoleResonanceStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("QR"), guessed_size: 0, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.601.1
        uid: Uid(B(uids::svc_storage::DICONDEEddyCurrentImageStorage)),
        is_retired: false,
        name: B("Eddy Current Image Storage"),
        keyword: B("EddyCurrentImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("EC"), guessed_size: 512 * 512, kind: S::Image },
    },
    Meta { // 1.2.840.10008.5.1.4.1.1.601.2
        uid: Uid(B(uids::svc_storage::DICONDEEddyCurrentMultiFrameImageStorage)),
        is_retired: false,
        name: B("Eddy Current Multi-frame Image Storage"),
        keyword: B("EddyCurrentMultiFrameImageStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("ECm"), guessed_size: 512 * 512, kind: S::MultiframeImage },
    },
    Meta { // 1.2.840.10008.5.1.4.1.2.1.1
        uid: Uid(B(uids::svc_qr::PatientRootQueryRetrieveInformationModelFind)),
        is_retired: false,
        name: B("Patient Root Query/Retrieve Information Model - FIND"),
        keyword: B("PatientRootQueryRetrieveInformationModelFind"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.2.1.2
        uid: Uid(B(uids::svc_qr::PatientRootQueryRetrieveInformationModelMove)),
        is_retired: false,
        name: B("Patient Root Query/Retrieve Information Model - MOVE"),
        keyword: B("PatientRootQueryRetrieveInformationModelMove"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.2.1.3
        uid: Uid(B(uids::svc_qr::PatientRootQueryRetrieveInformationModelGet)),
        is_retired: false,
        name: B("Patient Root Query/Retrieve Information Model - GET"),
        keyword: B("PatientRootQueryRetrieveInformationModelGet"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.2.2.1
        uid: Uid(B(uids::svc_qr::StudyRootQueryRetrieveInformationModelFind)),
        is_retired: false,
        name: B("Study Root Query/Retrieve Information Model - FIND"),
        keyword: B("StudyRootQueryRetrieveInformationModelFind"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.2.2.2
        uid: Uid(B(uids::svc_qr::StudyRootQueryRetrieveInformationModelMove)),
        is_retired: false,
        name: B("Study Root Query/Retrieve Information Model - MOVE"),
        keyword: B("StudyRootQueryRetrieveInformationModelMove"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.2.2.3
        uid: Uid(B(uids::svc_qr::StudyRootQueryRetrieveInformationModelGet)),
        is_retired: false,
        name: B("Study Root Query/Retrieve Information Model - GET"),
        keyword: B("StudyRootQueryRetrieveInformationModelGet"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.2.3.1
        uid: Uid(B(uids::svc_qr::RETIRED_PatientStudyOnlyQueryRetrieveInformationModelFind)),
        is_retired: true,
        name: B("Patient/Study Only Query/Retrieve Information Model - FIND (Retired)"),
        keyword: B("PatientStudyOnlyQueryRetrieveInformationModelFind"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.2.3.2
        uid: Uid(B(uids::svc_qr::RETIRED_PatientStudyOnlyQueryRetrieveInformationModelMove)),
        is_retired: true,
        name: B("Patient/Study Only Query/Retrieve Information Model - MOVE (Retired)"),
        keyword: B("PatientStudyOnlyQueryRetrieveInformationModelMove"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.2.3.3
        uid: Uid(B(uids::svc_qr::RETIRED_PatientStudyOnlyQueryRetrieveInformationModelGet)),
        is_retired: true,
        name: B("Patient/Study Only Query/Retrieve Information Model - GET (Retired)"),
        keyword: B("PatientStudyOnlyQueryRetrieveInformationModelGet"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.2.4.2
        uid: Uid(B(uids::svc_qr::CompositeInstanceRootRetrieveMove)),
        is_retired: false,
        name: B("Composite Instance Root Retrieve - MOVE"),
        keyword: B("CompositeInstanceRootRetrieveMove"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.2.4.3
        uid: Uid(B(uids::svc_qr::CompositeInstanceRootRetrieveGet)),
        is_retired: false,
        name: B("Composite Instance Root Retrieve - GET"),
        keyword: B("CompositeInstanceRootRetrieveGet"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.1.2.5.3
        uid: Uid(B(uids::svc_qr::CompositeInstanceRetrieveWithoutBulkDataGet)),
        is_retired: false,
        name: B("Composite Instance Retrieve Without Bulk Data - GET"),
        keyword: B("CompositeInstanceRetrieveWithoutBulkDataGet"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.20.1
        uid: Uid(B(uids::svc_defined_procedure_protocol::DefinedProcedureProtocolInformationModelFind)),
        is_retired: false,
        name: B("Defined Procedure Protocol Information Model - FIND"),
        keyword: B("DefinedProcedureProtocolInformationModelFind"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.20.2
        uid: Uid(B(uids::svc_defined_procedure_protocol::DefinedProcedureProtocolInformationModelMove)),
        is_retired: false,
        name: B("Defined Procedure Protocol Information Model - MOVE"),
        keyword: B("DefinedProcedureProtocolInformationModelMove"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.20.3
        uid: Uid(B(uids::svc_defined_procedure_protocol::DefinedProcedureProtocolInformationModelGet)),
        is_retired: false,
        name: B("Defined Procedure Protocol Information Model - GET"),
        keyword: B("DefinedProcedureProtocolInformationModelGet"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.31
        uid: Uid(B(uids::svc_worklist::ModalityWorklistInformationModelFind)),
        is_retired: false,
        name: B("Modality Worklist Information Model - FIND"),
        keyword: B("ModalityWorklistInformationModelFind"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.32
        uid: Uid(B(uids::svc_worklist::RETIRED_GeneralPurposeWorklistManagementMeta)),
        is_retired: true,
        name: B("General Purpose Worklist Management Meta SOP Class (Retired)"),
        keyword: B("GeneralPurposeWorklistManagementMeta"),
        uid_type: UidType::MetaSopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.32.1
        uid: Uid(B(uids::svc_worklist::RETIRED_GeneralPurposeWorklistInformationModelFind)),
        is_retired: true,
        name: B("General Purpose Worklist Information Model - FIND (Retired)"),
        keyword: B("GeneralPurposeWorklistInformationModelFind"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.32.2
        uid: Uid(B(uids::svc_study::RETIRED_GeneralPurposeScheduledProcedureStep)),
        is_retired: true,
        name: B("General Purpose Scheduled Procedure Step SOP Class (Retired)"),
        keyword: B("GeneralPurposeScheduledProcedureStep"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.32.3
        uid: Uid(B(uids::svc_study::RETIRED_GeneralPurposePerformedProcedureStep)),
        is_retired: true,
        name: B("General Purpose Performed Procedure Step SOP Class (Retired)"),
        keyword: B("GeneralPurposePerformedProcedureStep"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.33
        uid: Uid(B(uids::svc_ian::InstanceAvailabilityNotification)),
        is_retired: false,
        name: B("Instance Availability Notification SOP Class"),
        keyword: B("InstanceAvailabilityNotification"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.1
        uid: Uid(B(uids::svc_storage::RETIRED_RTBeamsDeliveryInstructionStorageTrial)),
        is_retired: true,
        name: B("RT Beams Delivery Instruction Storage - Trial (Retired)"),
        keyword: B("RTBeamsDeliveryInstructionStorageTrial"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.2
        uid: Uid(B(uids::svc_storage::RETIRED_RTConventionalMachineVerificationTrial)),
        is_retired: true,
        name: B("RT Conventional Machine Verification - Trial (Retired)"),
        keyword: B("RTConventionalMachineVerificationTrial"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.3
        uid: Uid(B(uids::svc_storage::RETIRED_RTIonMachineVerificationTrial)),
        is_retired: true,
        name: B("RT Ion Machine Verification - Trial (Retired)"),
        keyword: B("RTIonMachineVerificationTrial"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.4
        uid: Uid(B(uids::svc_ups::RETIRED_UnifiedWorklistAndProcedureStepTrial)),
        is_retired: false,
        name: B("Unified Worklist and Procedure Step Service Class - Trial (Retired)"),
        keyword: B("UnifiedWorklistAndProcedureStepTrial"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.4.1
        uid: Uid(B(uids::svc_ups::RETIRED_UnifiedProcedureStepPushTrial)),
        is_retired: true,
        name: B("Unified Procedure Step - Push SOP Class - Trial (Retired)"),
        keyword: B("UnifiedProcedureStepPushTrial"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.4.2
        uid: Uid(B(uids::svc_ups::RETIRED_UnifiedProcedureStepWatchTrial)),
        is_retired: true,
        name: B("Unified Procedure Step - Watch SOP Class - Trial (Retired)"),
        keyword: B("UnifiedProcedureStepWatchTrial"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.4.3
        uid: Uid(B(uids::svc_ups::RETIRED_UnifiedProcedureStepPullTrial)),
        is_retired: true,
        name: B("Unified Procedure Step - Pull SOP Class - Trial (Retired)"),
        keyword: B("UnifiedProcedureStepPullTrial"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.4.4
        uid: Uid(B(uids::svc_ups::RETIRED_UnifiedProcedureStepEventTrial)),
        is_retired: true,
        name: B("Unified Procedure Step - Event SOP Class - Trial (Retired)"),
        keyword: B("UnifiedProcedureStepEventTrial"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.5
        uid: Uid(B(uids::svc_ups::UPSGlobalSubscriptionInstance)),
        is_retired: false,
        name: B("UPS Global Subscription SOP Instance"),
        keyword: B("UPSGlobalSubscriptionInstance"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.5.1.4.34.5.1
        uid: Uid(B(uids::svc_ups::UPSFilteredGlobalSubscriptionInstance)),
        is_retired: false,
        name: B("UPS Filtered Global Subscription SOP Instance"),
        keyword: B("UPSFilteredGlobalSubscriptionInstance"),
        uid_type: UidType::WellKnownSopInstance,
    },
    Meta { // 1.2.840.10008.5.1.4.34.6
        uid: Uid(B(uids::svc_ups::UnifiedWorklistAndProcedureStep)),
        is_retired: false,
        name: B("Unified Worklist and Procedure Step Service Class"),
        keyword: B("UnifiedWorklistAndProcedureStep"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.6.1
        uid: Uid(B(uids::svc_ups::UnifiedProcedureStepPush)),
        is_retired: false,
        name: B("Unified Procedure Step - Push SOP Class"),
        keyword: B("UnifiedProcedureStepPush"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.6.2
        uid: Uid(B(uids::svc_ups::UnifiedProcedureStepWatch)),
        is_retired: false,
        name: B("Unified Procedure Step - Watch SOP Class"),
        keyword: B("UnifiedProcedureStepWatch"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.6.3
        uid: Uid(B(uids::svc_ups::UnifiedProcedureStepPull)),
        is_retired: false,
        name: B("Unified Procedure Step - Pull SOP Class"),
        keyword: B("UnifiedProcedureStepPull"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.6.4
        uid: Uid(B(uids::svc_ups::UnifiedProcedureStepEvent)),
        is_retired: false,
        name: B("Unified Procedure Step - Event SOP Class"),
        keyword: B("UnifiedProcedureStepEvent"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.6.5
        uid: Uid(B(uids::svc_ups::UnifiedProcedureStepQuery)),
        is_retired: false,
        name: B("Unified Procedure Step - Query SOP Class"),
        keyword: B("UnifiedProcedureStepQuery"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.7
        uid: Uid(B(uids::svc_storage::RTBeamsDeliveryInstructionStorage)),
        is_retired: false,
        name: B("RT Beams Delivery Instruction Storage"),
        keyword: B("RTBeamsDeliveryInstructionStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RB_d"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.34.8
        uid: Uid(B(uids::svc_rt_machine_verficiation::RTConventionalMachineVerification)),
        is_retired: false,
        name: B("RT Conventional Machine Verification"),
        keyword: B("RTConventionalMachineVerification"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.9
        uid: Uid(B(uids::svc_rt_machine_verficiation::RTIonMachineVerification)),
        is_retired: false,
        name: B("RT Ion Machine Verification"),
        keyword: B("RTIonMachineVerification"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.34.10
        uid: Uid(B(uids::svc_storage::RTBrachyApplicationSetupDeliveryInstructionStorage)),
        is_retired: false,
        name: B("RT Brachy Application Setup Delivery Instruction Storage"),
        keyword: B("RTBrachyApplicationSetupDeliveryInstructionStorage"),
        uid_type: UidType::SopClassPatientStorage { modality: B("RBb_d"), guessed_size: 4096, kind: S::Other },
    },
    Meta { // 1.2.840.10008.5.1.4.37.1
        uid: Uid(B(uids::svc_relevant_patient_info::GeneralRelevantPatientInformationQuery)),
        is_retired: false,
        name: B("General Relevant Patient Information Query"),
        keyword: B("GeneralRelevantPatientInformationQuery"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.37.2
        uid: Uid(B(uids::svc_relevant_patient_info::BreastImagingRelevantPatientInformationQuery)),
        is_retired: false,
        name: B("Breast Imaging Relevant Patient Information Query"),
        keyword: B("BreastImagingRelevantPatientInformationQuery"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.37.3
        uid: Uid(B(uids::svc_relevant_patient_info::CardiacRelevantPatientInformationQuery)),
        is_retired: false,
        name: B("Cardiac Relevant Patient Information Query"),
        keyword: B("CardiacRelevantPatientInformationQuery"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.38.1
        uid: Uid(B(uids::svc_hanging::HangingProtocolStorage)),
        is_retired: false,
        name: B("Hanging Protocol Storage"),
        keyword: B("HangingProtocolStorage"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.38.2
        uid: Uid(B(uids::svc_hanging::HangingProtocolInformationModelFind)),
        is_retired: false,
        name: B("Hanging Protocol Information Model - FIND"),
        keyword: B("HangingProtocolInformationModelFind"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.38.3
        uid: Uid(B(uids::svc_hanging::HangingProtocolInformationModelMove)),
        is_retired: false,
        name: B("Hanging Protocol Information Model - MOVE"),
        keyword: B("HangingProtocolInformationModelMove"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.38.4
        uid: Uid(B(uids::svc_hanging::HangingProtocolInformationModelGet)),
        is_retired: false,
        name: B("Hanging Protocol Information Model - GET"),
        keyword: B("HangingProtocolInformationModelGet"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.39.1
        uid: Uid(B(uids::svc_palette::ColorPaletteStorage)),
        is_retired: false,
        name: B("Color Palette Storage"),
        keyword: B("ColorPaletteStorage"),
        uid_type: UidType::SopClassNonPatientStorage,
    },
    Meta { // 1.2.840.10008.5.1.4.39.2
        uid: Uid(B(uids::svc_palette::ColorPaletteQueryRetrieveInformationModelFind)),
        is_retired: false,
        name: B("Color Palette Query/Retrieve Information Model - FIND"),
        keyword: B("ColorPaletteQueryRetrieveInformationModelFind"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.39.3
        uid: Uid(B(uids::svc_palette::ColorPaletteQueryRetrieveInformationModelMove)),
        is_retired: false,
        name: B("Color Palette Query/Retrieve Information Model - MOVE"),
        keyword: B("ColorPaletteQueryRetrieveInformationModelMove"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.39.4
        uid: Uid(B(uids::svc_palette::ColorPaletteQueryRetrieveInformationModelGet)),
        is_retired: false,
        name: B("Color Palette Query/Retrieve Information Model - GET"),
        keyword: B("ColorPaletteQueryRetrieveInformationModelGet"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.41
        uid: Uid(B(uids::svc_substance::ProductCharacteristicsQuery)),
        is_retired: false,
        name: B("Product Characteristics Query SOP Class"),
        keyword: B("ProductCharacteristicsQuery"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.42
        uid: Uid(B(uids::svc_substance::SubstanceApprovalQuery)),
        is_retired: false,
        name: B("Substance Approval Query SOP Class"),
        keyword: B("SubstanceApprovalQuery"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.43.1
        uid: Uid(B(uids::svc_implant::GenericImplantTemplateStorage)),
        is_retired: false,
        name: B("Generic Implant Template Storage"),
        keyword: B("GenericImplantTemplateStorage"),
        uid_type: UidType::SopClassNonPatientStorage,
    },
    Meta { // 1.2.840.10008.5.1.4.43.2
        uid: Uid(B(uids::svc_implant::GenericImplantTemplateInformationModelFind)),
        is_retired: false,
        name: B("Generic Implant Template Information Model - FIND"),
        keyword: B("GenericImplantTemplateInformationModelFind"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.43.3
        uid: Uid(B(uids::svc_implant::GenericImplantTemplateInformationModelMove)),
        is_retired: false,
        name: B("Generic Implant Template Information Model - MOVE"),
        keyword: B("GenericImplantTemplateInformationModelMove"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.43.4
        uid: Uid(B(uids::svc_implant::GenericImplantTemplateInformationModelGet)),
        is_retired: false,
        name: B("Generic Implant Template Information Model - GET"),
        keyword: B("GenericImplantTemplateInformationModelGet"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.44.1
        uid: Uid(B(uids::svc_implant::ImplantAssemblyTemplateStorage)),
        is_retired: false,
        name: B("Implant Assembly Template Storage"),
        keyword: B("ImplantAssemblyTemplateStorage"),
        uid_type: UidType::SopClassNonPatientStorage,
    },
    Meta { // 1.2.840.10008.5.1.4.44.2
        uid: Uid(B(uids::svc_implant::ImplantAssemblyTemplateInformationModelFind)),
        is_retired: false,
        name: B("Implant Assembly Template Information Model - FIND"),
        keyword: B("ImplantAssemblyTemplateInformationModelFind"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.44.3
        uid: Uid(B(uids::svc_implant::ImplantAssemblyTemplateInformationModelMove)),
        is_retired: false,
        name: B("Implant Assembly Template Information Model - MOVE"),
        keyword: B("ImplantAssemblyTemplateInformationModelMove"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.44.4
        uid: Uid(B(uids::svc_implant::ImplantAssemblyTemplateInformationModelGet)),
        is_retired: false,
        name: B("Implant Assembly Template Information Model - GET"),
        keyword: B("ImplantAssemblyTemplateInformationModelGet"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.45.1
        uid: Uid(B(uids::svc_implant::ImplantTemplateGroupStorage)),
        is_retired: false,
        name: B("Implant Template Group Storage"),
        keyword: B("ImplantTemplateGroupStorage"),
        uid_type: UidType::SopClassNonPatientStorage,
    },
    Meta { // 1.2.840.10008.5.1.4.45.2
        uid: Uid(B(uids::svc_implant::ImplantTemplateGroupInformationModelFind)),
        is_retired: false,
        name: B("Implant Template Group Information Model - FIND"),
        keyword: B("ImplantTemplateGroupInformationModelFind"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.45.3
        uid: Uid(B(uids::svc_implant::ImplantTemplateGroupInformationModelMove)),
        is_retired: false,
        name: B("Implant Template Group Information Model - MOVE"),
        keyword: B("ImplantTemplateGroupInformationModelMove"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.5.1.4.45.4
        uid: Uid(B(uids::svc_implant::ImplantTemplateGroupInformationModelGet)),
        is_retired: false,
        name: B("Implant Template Group Information Model - GET"),
        keyword: B("ImplantTemplateGroupInformationModelGet"),
        uid_type: UidType::SopClass,
    },
    Meta { // 1.2.840.10008.7.1.1
        uid: Uid(B(uids::app_hosting::NativeDICOMModel)),
        is_retired: false,
        name: B("Native DICOM Model"),
        keyword: B("NativeDICOMModel"),
        uid_type: UidType::ApplicationHostingModel,
    },
    Meta { // 1.2.840.10008.7.1.2
        uid: Uid(B(uids::app_hosting::AbstractMultiDimensionalImageModel)),
        is_retired: false,
        name: B("Abstract Multi-Dimensional Image Model"),
        keyword: B("AbstractMultiDimensionalImageModel"),
        uid_type: UidType::ApplicationHostingModel,
    },
    Meta { // 1.2.840.10008.8.1.1
        uid: Uid(B(uids::mapping_resource::DICOMContentMappingResource)),
        is_retired: false,
        name: B("DICOM Content Mapping Resource"),
        keyword: B("DICOMContentMappingResource"),
        uid_type: UidType::MappingResource,
    },
    Meta { // 1.2.840.10008.10.1
        uid: Uid(B(uids::real_time::VideoEndoscopicImageRealTimeCommunication)),
        is_retired: false,
        name: B("Video Endoscopic Image Real-Time Communication"),
        keyword: B("VideoEndoscopicImageRealTimeCommunication"),
        uid_type: UidType::Other,
    },
    Meta { // 1.2.840.10008.10.2
        uid: Uid(B(uids::real_time::VideoPhotographicImageRealTimeCommunication)),
        is_retired: false,
        name: B("Video Photographic Image Real-Time Communication"),
        keyword: B("VideoPhotographicImageRealTimeCommunication"),
        uid_type: UidType::Other,
    },
    Meta { // 1.2.840.10008.10.3
        uid: Uid(B(uids::real_time::AudioWaveformRealTimeCommunication)),
        is_retired: false,
        name: B("Audio Waveform Real-Time Communication"),
        keyword: B("AudioWaveformRealTimeCommunication"),
        uid_type: UidType::Other,
    },
    Meta { // 1.2.840.10008.10.4
        uid: Uid(B(uids::real_time::RenditionSelectionDocumentRealTimeCommunication)),
        is_retired: false,
        name: B("Rendition Selection Document Real-Time Communication"),
        keyword: B("RenditionSelectionDocumentRealTimeCommunication"),
        uid_type: UidType::Other,
    },
    Meta { // 1.2.840.10008.15.0.3.1
        uid: Uid(B(uids::ldap::dicomDeviceName)),
        is_retired: false,
        name: B("dicomDeviceName"),
        keyword: B("dicomDeviceName"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.2
        uid: Uid(B(uids::ldap::dicomDescription)),
        is_retired: false,
        name: B("dicomDescription"),
        keyword: B("dicomDescription"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.3
        uid: Uid(B(uids::ldap::dicomManufacturer)),
        is_retired: false,
        name: B("dicomManufacturer"),
        keyword: B("dicomManufacturer"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.4
        uid: Uid(B(uids::ldap::dicomManufacturerModelName)),
        is_retired: false,
        name: B("dicomManufacturerModelName"),
        keyword: B("dicomManufacturerModelName"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.5
        uid: Uid(B(uids::ldap::dicomSoftwareVersion)),
        is_retired: false,
        name: B("dicomSoftwareVersion"),
        keyword: B("dicomSoftwareVersion"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.6
        uid: Uid(B(uids::ldap::dicomVendorData)),
        is_retired: false,
        name: B("dicomVendorData"),
        keyword: B("dicomVendorData"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.7
        uid: Uid(B(uids::ldap::dicomAETitle)),
        is_retired: false,
        name: B("dicomAETitle"),
        keyword: B("dicomAETitle"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.8
        uid: Uid(B(uids::ldap::dicomNetworkConnectionReference)),
        is_retired: false,
        name: B("dicomNetworkConnectionReference"),
        keyword: B("dicomNetworkConnectionReference"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.9
        uid: Uid(B(uids::ldap::dicomApplicationCluster)),
        is_retired: false,
        name: B("dicomApplicationCluster"),
        keyword: B("dicomApplicationCluster"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.10
        uid: Uid(B(uids::ldap::dicomAssociationInitiator)),
        is_retired: false,
        name: B("dicomAssociationInitiator"),
        keyword: B("dicomAssociationInitiator"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.11
        uid: Uid(B(uids::ldap::dicomAssociationAcceptor)),
        is_retired: false,
        name: B("dicomAssociationAcceptor"),
        keyword: B("dicomAssociationAcceptor"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.12
        uid: Uid(B(uids::ldap::dicomHostname)),
        is_retired: false,
        name: B("dicomHostname"),
        keyword: B("dicomHostname"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.13
        uid: Uid(B(uids::ldap::dicomPort)),
        is_retired: false,
        name: B("dicomPort"),
        keyword: B("dicomPort"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.14
        uid: Uid(B(uids::ldap::dicomSOPClass)),
        is_retired: false,
        name: B("dicomSOPClass"),
        keyword: B("dicomSOPClass"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.15
        uid: Uid(B(uids::ldap::dicomTransferRole)),
        is_retired: false,
        name: B("dicomTransferRole"),
        keyword: B("dicomTransferRole"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.16
        uid: Uid(B(uids::ldap::dicomTransferSyntax)),
        is_retired: false,
        name: B("dicomTransferSyntax"),
        keyword: B("dicomTransferSyntax"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.17
        uid: Uid(B(uids::ldap::dicomPrimaryDeviceType)),
        is_retired: false,
        name: B("dicomPrimaryDeviceType"),
        keyword: B("dicomPrimaryDeviceType"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.18
        uid: Uid(B(uids::ldap::dicomRelatedDeviceReference)),
        is_retired: false,
        name: B("dicomRelatedDeviceReference"),
        keyword: B("dicomRelatedDeviceReference"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.19
        uid: Uid(B(uids::ldap::dicomPreferredCalledAETitle)),
        is_retired: false,
        name: B("dicomPreferredCalledAETitle"),
        keyword: B("dicomPreferredCalledAETitle"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.20
        uid: Uid(B(uids::ldap::dicomTLSCyphersuite)),
        is_retired: false,
        name: B("dicomTLSCyphersuite"),
        keyword: B("dicomTLSCyphersuite"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.21
        uid: Uid(B(uids::ldap::dicomAuthorizedNodeCertificateReference)),
        is_retired: false,
        name: B("dicomAuthorizedNodeCertificateReference"),
        keyword: B("dicomAuthorizedNodeCertificateReference"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.22
        uid: Uid(B(uids::ldap::dicomThisNodeCertificateReference)),
        is_retired: false,
        name: B("dicomThisNodeCertificateReference"),
        keyword: B("dicomThisNodeCertificateReference"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.23
        uid: Uid(B(uids::ldap::dicomInstalled)),
        is_retired: false,
        name: B("dicomInstalled"),
        keyword: B("dicomInstalled"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.24
        uid: Uid(B(uids::ldap::dicomStationName)),
        is_retired: false,
        name: B("dicomStationName"),
        keyword: B("dicomStationName"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.25
        uid: Uid(B(uids::ldap::dicomDeviceSerialNumber)),
        is_retired: false,
        name: B("dicomDeviceSerialNumber"),
        keyword: B("dicomDeviceSerialNumber"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.26
        uid: Uid(B(uids::ldap::dicomInstitutionName)),
        is_retired: false,
        name: B("dicomInstitutionName"),
        keyword: B("dicomInstitutionName"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.27
        uid: Uid(B(uids::ldap::dicomInstitutionAddress)),
        is_retired: false,
        name: B("dicomInstitutionAddress"),
        keyword: B("dicomInstitutionAddress"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.28
        uid: Uid(B(uids::ldap::dicomInstitutionDepartmentName)),
        is_retired: false,
        name: B("dicomInstitutionDepartmentName"),
        keyword: B("dicomInstitutionDepartmentName"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.29
        uid: Uid(B(uids::ldap::dicomIssuerOfPatientID)),
        is_retired: false,
        name: B("dicomIssuerOfPatientID"),
        keyword: B("dicomIssuerOfPatientID"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.30
        uid: Uid(B(uids::ldap::dicomPreferredCallingAETitle)),
        is_retired: false,
        name: B("dicomPreferredCallingAETitle"),
        keyword: B("dicomPreferredCallingAETitle"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.3.31
        uid: Uid(B(uids::ldap::dicomSupportedCharacterSet)),
        is_retired: false,
        name: B("dicomSupportedCharacterSet"),
        keyword: B("dicomSupportedCharacterSet"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.4.1
        uid: Uid(B(uids::ldap::dicomConfigurationRoot)),
        is_retired: false,
        name: B("dicomConfigurationRoot"),
        keyword: B("dicomConfigurationRoot"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.4.2
        uid: Uid(B(uids::ldap::dicomDevicesRoot)),
        is_retired: false,
        name: B("dicomDevicesRoot"),
        keyword: B("dicomDevicesRoot"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.4.3
        uid: Uid(B(uids::ldap::dicomUniqueAETitlesRegistryRoot)),
        is_retired: false,
        name: B("dicomUniqueAETitlesRegistryRoot"),
        keyword: B("dicomUniqueAETitlesRegistryRoot"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.4.4
        uid: Uid(B(uids::ldap::dicomDevice)),
        is_retired: false,
        name: B("dicomDevice"),
        keyword: B("dicomDevice"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.4.5
        uid: Uid(B(uids::ldap::dicomNetworkAE)),
        is_retired: false,
        name: B("dicomNetworkAE"),
        keyword: B("dicomNetworkAE"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.4.6
        uid: Uid(B(uids::ldap::dicomNetworkConnection)),
        is_retired: false,
        name: B("dicomNetworkConnection"),
        keyword: B("dicomNetworkConnection"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.4.7
        uid: Uid(B(uids::ldap::dicomUniqueAETitle)),
        is_retired: false,
        name: B("dicomUniqueAETitle"),
        keyword: B("dicomUniqueAETitle"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.0.4.8
        uid: Uid(B(uids::ldap::dicomTransferCapability)),
        is_retired: false,
        name: B("dicomTransferCapability"),
        keyword: B("dicomTransferCapability"),
        uid_type: UidType::LdapOid,
    },
    Meta { // 1.2.840.10008.15.1.1
        uid: Uid(B(uids::synch::UTC)),
        is_retired: false,
        name: B("Universal Coordinated Time"),
        keyword: B("UTC"),
        uid_type: UidType::Other,
    },
];
